{"version":3,"sources":["lib/cardCategories.js","lib/characters.js","lib/roles.js","lib/setup.js","lib/helper.js","lib/game.js","client/setModePanel.js","client/animatedItems.js","client/animatedBoard.js","client/gameArea.js","client/board.js","client/room.js","client/lobby.js","index.js"],"names":["BASIC","EQUIPMENT","name","country","health","gender","isMonarch","expansion","ROLE_DIST_LABELS","ROLE_DIST","2","3","4","5","6","7","8","9","10","11","12","CARDS","value","suit","type","setup","ctx","setupData","numPlayers","playOrder","random","expansions","unshuffledRoles","forEach","role","i","j","push","roles","Shuffle","length","id","startPlayerIndex","findIndex","allCharacters","CHARACTERS","filter","c","undefined","includes","numCharacterChoices","monarchChoices","normalCharacters","characterChoices","Object","fromEntries","map","player","slice","isAlive","unshuffledDeck","card","deck","characters","healths","discard","hands","equipment","isChained","isFlipped","harvest","privateZone","refusingDeath","drawCard","G","pop","splice","nextAlivePlayerPos","pos","newPos","pickUp","index","playerID","turnOrder","first","next","playOrderPos","SanGuoSha","playerView","newRoles","newCharacters","values","every","choices","phases","selectCharacters","start","onBegin","events","setActivePlayers","moveLimit","others","endIf","turn","order","stages","selectCharacter","moves","character","maxHealth","monarch","max","current","play","count","drawCards","_G","all","draw","judgment","targetPlayerID","forceCategory","category","give","otherPlayerID","dismantle","target","steal","toggleChain","flipObject","_ctx","objectID","reveal","source","visibleTo","returnCard","item","putDownHarvest","pickUpHarvest","finishHarvest","reverse","passLightning","astrology","numCards","actualNumCards","Math","min","finishAstrology","change","newValue","Die","alliance","player1","player2","temp","collapse","updateHealth","die","currentPlayer","endTurn","endPlay","setStage","discardCard","finishDiscard","minPlayers","maxPlayers","SetModePanel","handleHotkey","e","props","setMode","selectFunction","altKey","ctrlKey","metaKey","key","DEFAULT_MODE","GIVE_MODE","DISMANTLE_MODE","STEAL_MODE","REVEAL_MODE","FLIP_MODE","HELP_MODE","SHOW_HOTKEYS_MODE","keyCode","func","document","addEventListener","this","removeEventListener","className","renderButton","renderSpecialModeButton","onClick","renderHarvestButton","renderFinishDiscardButton","renderSpecialButton","renderHotkeys","targetMode","mode","disabled","stage","COUNTRY_SCENE_MODE","BLOCKADE_MODE","ALLIANCE_MODE","renderRoleDistribution","numKings","numRebels","numLoyalists","numSpies","activePlayers","React","Component","GIVE_JUDGMENT_MODE","items","from","update","clickable","animated","useTransition","enter","leave","unique","child","classNames","SUITS","AnimatedBoard","width","height","scaledWidth","scaledHeight","characterCards","healthPoints","normalCards","_","opacity","faceUp","left","top","img","src","interpolate","alt","style","transform","color","sideways","scale","div","transformOrigin","GameArea","state","selectedIndex","setState","helpCard","window","sanguosha","playerAreas","nodes","myPlayerIndex","indexOf","playerArea","playerIndex","addPlayerName","addCharacterRole","addCharacterCard","addHealth","addChain","addPlayerEquipment","addOtherPlayerHand","addCharacterChoices","addDeck","addMyHand","middleCards","getPrivateZoneCards","getHarvestCards","getDiscardCards","renderMyArea","renderActionButton","renderHelp","renderSetModePanel","startX","choice","matchData","x","y","roleName","isRefusingDeath","isDying","Set","size","floor","hand","marginLeft","marginTop","fontSize","spacing","middleCardsFound","privateCards","numCardsShown","setSelectedIndex","playAgain","gameover","phase","actionButton","text","dangerouslySetInnerHTML","__html","RULES","SanGuoShaBoard","updateDimensions","el","clientRect","clientWidth","clientHeight","gameArea","findPlayerAreas","ref","maxScale","bestLayout","numSide","numTop","findPlayerAreasGivenLayout","sideSpacing","topSpacing","SanGuoShaClient","Client","game","board","enhancer","applyMiddleware","logger","Room","SERVER","process","REACT_APP_PROXY","location","toString","replace","EXPANSIONS","multiplayer","SocketIO","server","debug","SanGuoShaLobby","refreshLobbyState","a","matchInfo","lobbyClient","listMatches","matches","matchID","match","find","leaveMatch","parentMatchID","inGame","childMatch","joinMatch","clearTimeout","timeout","setTimeout","renderMatch","status","createdAt","players","playerNames","checked","onChange","buttons","some","then","createMatch","Date","toLocaleString","join","setName","getElementById","localStorage","setItem","playerName","playerCredentials","credentials","JSON","stringify","removeItem","nextMatchID","LobbyClient","getItem","parse","querySelector","playAudio","renderLobby","defaultValue","onKeyPress","nativeEvent","maybeRenderCreateButton","App","audio","Audio","volume","loop","REACT_APP_LOCAL","render"],"mappings":"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","file":"static/js/main.038f6947.chunk.js","sourcesContent":["export const BASIC = ['Attack', 'Escape', 'Peach', 'Fire Attack', 'Lightning Attack', 'Wine'];\n\nexport const EQUIPMENT = {\n    'Lightning': 'Lightning',\n    'Capture': 'Capture',\n    'Starvation': 'Starvation',\n    'Crossbow': 'Weapon',\n    'Black Pommel': 'Weapon',\n    'Ice Sword': 'Weapon',\n    'Gender Swords': 'Weapon',\n    'Green Dragon Blade': 'Weapon',\n    'Serpent Spear': 'Weapon',\n    'Axe': 'Weapon',\n    'Sky Scorcher': 'Weapon',\n    'Longbow': 'Weapon',\n    'Ancient Scimitar': 'Weapon',\n    'Fire Fan': 'Weapon',\n    'Eight Trigrams': 'Shield',\n    'Black Shield': 'Shield',\n    'Wood Armor': 'Shield',\n    'Silver Helmet': 'Shield',\n    'Red Hare': '-1',\n    'Da Yuan': '-1',\n    'Zi Xing': '-1',\n    'Di Lu': '+1',\n    'Shadow Runner': '+1',\n    'Storm Runner': '+1',\n    'Hua Liu': '+1',\n};\n","\nexport default [\n    {\n        name: 'Liu Bei',\n        country: 'Shu',\n        health: 4,\n        gender: 'M',\n        isMonarch: true,\n    },\n    {\n        name: 'Guan Yu',\n        country: 'Shu',\n        health: 4,\n        gender: 'M',\n    },\n    {\n        name: 'Zhang Fei',\n        country: 'Shu',\n        health: 4,\n        gender: 'M',\n    },\n    {\n        name: 'Zhuge Liang',\n        country: 'Shu',\n        health: 3,\n        gender: 'M',\n    },\n    {\n        name: 'Zhao Yun',\n        country: 'Shu',\n        health: 4,\n        gender: 'M',\n    },\n    {\n        name: 'Ma Chao',\n        country: 'Shu',\n        health: 4,\n        gender: 'M',\n    },\n    {\n        name: 'Huang Yue Ying',\n        country: 'Shu',\n        health: 3,\n        gender: 'F',\n    },\n    {\n        name: 'Sun Quan',\n        country: 'Wu',\n        health: 4,\n        gender: 'M',\n        isMonarch: true,\n    },\n    {\n        name: 'Gan Ning',\n        country: 'Wu',\n        health: 4,\n        gender: 'M',\n    },\n    {\n        name: 'Lu Meng',\n        country: 'Wu',\n        health: 4,\n        gender: 'M',\n    },\n    {\n        name: 'Huang Gai',\n        country: 'Wu',\n        health: 4,\n        gender: 'M',\n    },\n    {\n        name: 'Zhou Yu',\n        country: 'Wu',\n        health: 3,\n        gender: 'M',\n    },\n    {\n        name: 'Da Qiao',\n        country: 'Wu',\n        health: 3,\n        gender: 'F',\n    },\n    {\n        name: 'Lu Xun',\n        country: 'Wu',\n        health: 3,\n        gender: 'M',\n    },\n    {\n        name: 'Sun Shang Xiang',\n        country: 'Wu',\n        health: 3,\n        gender: 'F',\n    },\n    {\n        name: 'Cao Cao',\n        country: 'Wei',\n        health: 4,\n        gender: 'M',\n        isMonarch: true,\n    },\n    {\n        name: 'Sima Yi',\n        country: 'Wei',\n        health: 3,\n        gender: 'M',\n    },\n    {\n        name: 'Xiahou Dun',\n        country: 'Wei',\n        health: 4,\n        gender: 'M',\n    },\n    {\n        name: 'Zhang Liao',\n        country: 'Wei',\n        health: 4,\n        gender: 'M',\n    },\n    {\n        name: 'Xu Chu',\n        country: 'Wei',\n        health: 4,\n        gender: 'M',\n    },\n    {\n        name: 'Guo Jia',\n        country: 'Wei',\n        health: 3,\n        gender: 'M',\n    },\n    {\n        name: 'Zhen Ji',\n        country: 'Wei',\n        health: 3,\n        gender: 'F',\n    },\n    {\n        name: 'Hua Tuo',\n        country: 'Kingdomless',\n        health: 3,\n        gender: 'M',\n    },\n    {\n        name: 'Diao Chan',\n        country: 'Kingdomless',\n        health: 3,\n        gender: 'F',\n    },\n    {\n        name: 'Lu Bu',\n        country: 'Kingdomless',\n        health: 4,\n        gender: 'M',\n    },\n    {\n        name: 'Wei Yan',\n        country: 'Shu',\n        health: 4,\n        gender: 'M',\n        expansion: 'wind',\n    },\n    {\n        name: 'Huang Zhong',\n        country: 'Shu',\n        health: 4,\n        gender: 'M',\n        expansion: 'wind',\n    },\n    {\n        name: 'Xiahou Yuan',\n        country: 'Wei',\n        health: 4,\n        gender: 'M',\n        expansion: 'wind',\n    },\n    {\n        name: 'Cao Ren',\n        country: 'Wei',\n        health: 4,\n        gender: 'M',\n        expansion: 'wind',\n    },\n    {\n        name: 'Zhou Tai',\n        country: 'Wu',\n        health: 4,\n        gender: 'M',\n        expansion: 'wind',\n    },\n    {\n        name: 'Xiao Qiao',\n        country: 'Wu',\n        health: 3,\n        gender: 'F',\n        expansion: 'wind',\n    },\n    {\n        name: 'Zhang Jiao',\n        country: 'Kingdomless',\n        health: 3,\n        gender: 'M',\n        expansion: 'wind',\n        isMonarch: true,\n    },\n    //{\n       // name: 'Yu Ji',\n        //country: 'Kingdomless',\n       // health: 3,\n       // gender: 'M',\n       // expansion: 'wind',\n    //},\n    {\n        name: 'Zhuge Liang 8',\n        country: 'Shu',\n        health: 3,\n        gender: 'M',\n        expansion: 'fire',\n    },\n    {\n        name: 'Pang Tong',\n        country: 'Shu',\n        health: 3,\n        gender: 'M',\n        expansion: 'fire',\n    },\n    {\n        name: 'Dian Wei',\n        country: 'Wei',\n        health: 4,\n        gender: 'M',\n        expansion: 'fire',\n    },\n    {\n        name: 'Xun Yu',\n        country: 'Wei',\n        health: 3,\n        gender: 'M',\n        expansion: 'fire',\n    },\n    {\n        name: 'Tai Shi Ci',\n        country: 'Wu',\n        health: 4,\n        gender: 'M',\n        expansion: 'fire',\n    },\n    {\n        name: 'Yuan Shao',\n        country: 'Kingdomless',\n        health: 4,\n        gender: 'M',\n        expansion: 'fire',\n        isMonarch: true,\n    },\n    {\n        name: 'Pang De',\n        country: 'Kingdomless',\n        health: 4,\n        gender: 'M',\n        expansion: 'fire',\n    },\n    {\n        name: 'Yan Liang Wen Chou',\n        country: 'Kingdomless',\n        health: 4,\n        gender: 'M',\n        expansion: 'fire',\n    },\n    {\n        name: 'Meng Huo',\n        country: 'Shu',\n        health: 4,\n        gender: 'M',\n        expansion: 'wood',\n    },\n    {\n        name: 'Zhu Rong',\n        country: 'Shu',\n        health: 4,\n        gender: 'F',\n        expansion: 'wood',\n    },\n    {\n        name: 'Xu Huang',\n        country: 'Wei',\n        health: 4,\n        gender: 'M',\n        expansion: 'wood',\n    },\n    {\n        name: 'Cao Pi',\n        country: 'Wei',\n        health: 3,\n        gender: 'M',\n        expansion: 'wood',\n        isMonarch: true,\n    },\n    {\n        name: 'Sun Jian',\n        country: 'Wu',\n        health: 4,\n        gender: 'M',\n        expansion: 'wood',\n    },\n    {\n        name: 'Lu Su',\n        country: 'Wu',\n        health: 3,\n        gender: 'M',\n        expansion: 'wood',\n    },\n    {\n        name: 'Dong Zhuo',\n        country: 'Kingdomless',\n        health: 8,\n        gender: 'M',\n        expansion: 'wood',\n        isMonarch: true,\n    },\n    {\n        name: 'Jia Xu',\n        country: 'Kingdomless',\n        health: 3,\n        gender: 'M',\n        expansion: 'wood',\n    },\n];\n","// Recommended role distribution for different numbers of players\n// http://www.englishsanguosha.com/rules/roles\nexport const ROLE_DIST_LABELS = ['King', 'Rebel', 'Loyalist', 'Spy'];\n/*export const ROLE_DIST = {\n    2: [1, 1, 0, 0],\n    3: [1, 1, 0, 1],\n    4: [1, 2, 0, 1],\n    5: [1, 2, 1, 1],\n    6: [1, 3, 1, 1],\n    7: [1, 3, 2, 1],\n    8: [1, 4, 2, 1],\n    9: [1, 4, 3, 1],\n    10: [1, 5, 3, 1],\n    11: [1, 5, 3, 1],\n    12: [1, 5, 3, 1],\n};*/\n\n\nexport const ROLE_DIST = {\n    2: [1, 0, 1, 0],\n    3: [1, 2, 0, 0],\n    4: [1, 2, 1, 0],\n    5: [1, 3, 1, 0],\n    6: [1, 3, 2, 0],\n    7: [1, 4, 2, 0],\n    8: [1, 4, 3, 0],\n    9: [1, 5, 3, 0],\n    10: [1, 5, 4, 0],\n    11: [1, 6, 4, 0],\n    12: [1, 6, 5, 0],\n};","/**\n * Initial game setup.\n */\n\nimport CHARACTERS from './characters.js';\nimport { ROLE_DIST, ROLE_DIST_LABELS } from './roles.js';\n\nexport const monarch = 0;\n\nconst CARDS = [\n    { value: 'A', suit: 'CLUB', type: 'Crossbow' },\n    { value: 'A', suit: 'CLUB', type: 'Duel' },\n    { value: 'A', suit: 'CLUB', type: 'Silver Helmet' },\n    { value: '2', suit: 'CLUB', type: 'Attack' },\n    { value: '2', suit: 'CLUB', type: 'Eight Trigrams' },\n    { value: '2', suit: 'CLUB', type: 'Black Shield' },\n    { value: '2', suit: 'CLUB', type: 'Wood Armor' },\n    { value: '3', suit: 'CLUB', type: 'Wine' },\n    { value: '3', suit: 'CLUB', type: 'Break' },\n    { value: '3', suit: 'CLUB', type: 'Attack' },\n    { value: '4', suit: 'CLUB', type: 'Starvation' },\n    { value: '4', suit: 'CLUB', type: 'Attack' },\n    { value: '4', suit: 'CLUB', type: 'Break' },\n    { value: '5', suit: 'CLUB', type: 'Di Lu' },\n    { value: '5', suit: 'CLUB', type: 'Attack' },\n    { value: '5', suit: 'CLUB', type: 'Lightning Attack' },\n    { value: '6', suit: 'CLUB', type: 'Capture' },\n    { value: '6', suit: 'CLUB', type: 'Attack' },\n    { value: '6', suit: 'CLUB', type: 'Lightning Attack' },\n    { value: '7', suit: 'CLUB', type: 'Attack' },\n    { value: '7', suit: 'CLUB', type: 'Barbarians' },\n    { value: '7', suit: 'CLUB', type: 'Lightning Attack' },\n    { value: '8', suit: 'CLUB', type: 'Attack' },\n    { value: '8', suit: 'CLUB', type: 'Lightning Attack' },\n    { value: '8', suit: 'CLUB', type: 'Attack' },\n    { value: '9', suit: 'CLUB', type: 'Attack' },\n    { value: '9', suit: 'CLUB', type: 'Wine' },\n    { value: '9', suit: 'CLUB', type: 'Attack' },\n    { value: '10', suit: 'CLUB', type: 'Chains' },\n    { value: '10', suit: 'CLUB', type: 'Attack' },\n    { value: '10', suit: 'CLUB', type: 'Attack' },\n    { value: 'J', suit: 'CLUB', type: 'Attack' },\n    { value: 'J', suit: 'CLUB', type: 'Attack' },\n    { value: 'J', suit: 'CLUB', type: 'Chains' },\n    { value: 'Q', suit: 'CLUB', type: 'Coerce' },\n    { value: 'Q', suit: 'CLUB', type: 'Chains' },\n    { value: 'Q', suit: 'CLUB', type: 'Negate' },\n    { value: 'K', suit: 'CLUB', type: 'Coerce' },\n    { value: 'K', suit: 'CLUB', type: 'Negate' },\n    { value: 'K', suit: 'CLUB', type: 'Chains' },\n    { value: 'A', suit: 'DIAMOND', type: 'Crossbow' },\n    { value: 'A', suit: 'DIAMOND', type: 'Duel' },\n    { value: 'A', suit: 'DIAMOND', type: 'Fire Fan' },\n    { value: '2', suit: 'DIAMOND', type: 'Escape' },\n    { value: '2', suit: 'DIAMOND', type: 'Peach' },\n    { value: '2', suit: 'DIAMOND', type: 'Escape' },\n    { value: '3', suit: 'DIAMOND', type: 'Steal' },\n    { value: '3', suit: 'DIAMOND', type: 'Peach' },\n    { value: '3', suit: 'DIAMOND', type: 'Escape' },\n    { value: '4', suit: 'DIAMOND', type: 'Steal' },\n    { value: '4', suit: 'DIAMOND', type: 'Fire Attack' },\n    { value: '4', suit: 'DIAMOND', type: 'Escape' },\n    { value: '5', suit: 'DIAMOND', type: 'Fire Attack' },\n    { value: '5', suit: 'DIAMOND', type: 'Axe' },\n    { value: '5', suit: 'DIAMOND', type: 'Escape' },\n    { value: '6', suit: 'DIAMOND', type: 'Attack' },\n    { value: '6', suit: 'DIAMOND', type: 'Escape' },\n    { value: '6', suit: 'DIAMOND', type: 'Escape' },\n    { value: '7', suit: 'DIAMOND', type: 'Attack' },\n    { value: '7', suit: 'DIAMOND', type: 'Escape' },\n    { value: '7', suit: 'DIAMOND', type: 'Escape' },\n    { value: '8', suit: 'DIAMOND', type: 'Escape' },\n    { value: '8', suit: 'DIAMOND', type: 'Escape' },\n    { value: '8', suit: 'DIAMOND', type: 'Attack' },\n    { value: '9', suit: 'DIAMOND', type: 'Attack' },\n    { value: '9', suit: 'DIAMOND', type: 'Escape' },\n    { value: '9', suit: 'DIAMOND', type: 'Wine' },\n    { value: '10', suit: 'DIAMOND', type: 'Escape' },\n    { value: '10', suit: 'DIAMOND', type: 'Escape' },\n    { value: '10', suit: 'DIAMOND', type: 'Attack' },\n    { value: 'J', suit: 'DIAMOND', type: 'Escape' },\n    { value: 'J', suit: 'DIAMOND', type: 'Escape' },\n    { value: 'J', suit: 'DIAMOND', type: 'Escape' },\n    { value: 'Q', suit: 'DIAMOND', type: 'Blaze' },\n    { value: 'Q', suit: 'DIAMOND', type: 'Negate' },\n    { value: 'Q', suit: 'DIAMOND', type: 'Peach' },\n    { value: 'Q', suit: 'DIAMOND', type: 'Sky Scorcher' },\n    { value: 'K', suit: 'DIAMOND', type: 'Hua Liu' },\n    { value: 'K', suit: 'DIAMOND', type: 'Attack' },\n    { value: 'K', suit: 'DIAMOND', type: 'Zi Xing' },\n    { value: 'A', suit: 'HEART', type: 'Negate' },\n    { value: 'A', suit: 'HEART', type: 'Hail of Arrows' },\n    { value: 'A', suit: 'HEART', type: 'Peach Garden' },\n    { value: '2', suit: 'HEART', type: 'Escape' },\n    { value: '2', suit: 'HEART', type: 'Escape' },\n    { value: '2', suit: 'HEART', type: 'Blaze' },\n    { value: '3', suit: 'HEART', type: 'Blaze' },\n    { value: '3', suit: 'HEART', type: 'Harvest' },\n    { value: '3', suit: 'HEART', type: 'Peach' },\n    { value: '4', suit: 'HEART', type: 'Harvest' },\n    { value: '4', suit: 'HEART', type: 'Fire Attack' },\n    { value: '4', suit: 'HEART', type: 'Peach' },\n    { value: '5', suit: 'HEART', type: 'Peach' },\n    { value: '5', suit: 'HEART', type: 'Longbow' },\n    { value: '5', suit: 'HEART', type: 'Red Hare' },\n    { value: '6', suit: 'HEART', type: 'Peach' },\n    { value: '6', suit: 'HEART', type: 'Capture' },\n    { value: '6', suit: 'HEART', type: 'Peach' },\n    { value: '7', suit: 'HEART', type: 'Peach' },\n    { value: '7', suit: 'HEART', type: 'Draw Two' },\n    { value: '7', suit: 'HEART', type: 'Fire Attack' },\n    { value: '8', suit: 'HEART', type: 'Escape' },\n    { value: '8', suit: 'HEART', type: 'Draw Two' },\n    { value: '8', suit: 'HEART', type: 'Peach' },\n    { value: '9', suit: 'HEART', type: 'Peach' },\n    { value: '9', suit: 'HEART', type: 'Escape' },\n    { value: '9', suit: 'HEART', type: 'Draw Two' },\n    { value: '10', suit: 'HEART', type: 'Attack' },\n    { value: '10', suit: 'HEART', type: 'Attack' },\n    { value: '10', suit: 'HEART', type: 'Fire Attack' },\n    { value: 'J', suit: 'HEART', type: 'Attack' },\n    { value: 'J', suit: 'HEART', type: 'Escape' },\n    { value: 'J', suit: 'HEART', type: 'Draw Two' },\n    { value: 'Q', suit: 'HEART', type: 'Escape' },\n    { value: 'Q', suit: 'HEART', type: 'Peach' },\n    { value: 'Q', suit: 'HEART', type: 'Lightning' },\n    { value: 'Q', suit: 'HEART', type: 'Break' },\n    { value: 'K', suit: 'HEART', type: 'Escape' },\n    { value: 'K', suit: 'HEART', type: 'Negate' },\n    { value: 'K', suit: 'HEART', type: 'Storm Runner' },\n    { value: 'A', suit: 'SPADE', type: 'Ancient Scimitar' },\n    { value: 'A', suit: 'SPADE', type: 'Duel' },\n    { value: 'A', suit: 'SPADE', type: 'Lightning' },\n    { value: '2', suit: 'SPADE', type: 'Ice Sword' },\n    { value: '2', suit: 'SPADE', type: 'Gender Swords' },\n    { value: '2', suit: 'SPADE', type: 'Eight Trigrams' },\n    { value: '2', suit: 'SPADE', type: 'Wood Armor' },\n    { value: '3', suit: 'SPADE', type: 'Wine' },\n    { value: '3', suit: 'SPADE', type: 'Break' },\n    { value: '3', suit: 'SPADE', type: 'Steal' },\n    { value: '4', suit: 'SPADE', type: 'Break' },\n    { value: '4', suit: 'SPADE', type: 'Lightning Attack' },\n    { value: '4', suit: 'SPADE', type: 'Steal' },\n    { value: '5', suit: 'SPADE', type: 'Shadow Runner' },\n    { value: '5', suit: 'SPADE', type: 'Lightning Attack' },\n    { value: '5', suit: 'SPADE', type: 'Green Dragon Blade' },\n    { value: '6', suit: 'SPADE', type: 'Black Pommel' },\n    { value: '6', suit: 'SPADE', type: 'Capture' },\n    { value: '6', suit: 'SPADE', type: 'Lightning Attack' },\n    { value: '7', suit: 'SPADE', type: 'Barbarians' },\n    { value: '7', suit: 'SPADE', type: 'Lightning Attack' },\n    { value: '7', suit: 'SPADE', type: 'Attack' },\n    { value: '8', suit: 'SPADE', type: 'Attack' },\n    { value: '8', suit: 'SPADE', type: 'Attack' },\n    { value: '8', suit: 'SPADE', type: 'Lightning Attack' },\n    { value: '9', suit: 'SPADE', type: 'Attack' },\n    { value: '9', suit: 'SPADE', type: 'Attack' },\n    { value: '9', suit: 'SPADE', type: 'Wine' },\n    { value: '10', suit: 'SPADE', type: 'Attack' },\n    { value: '10', suit: 'SPADE', type: 'Attack' },\n    { value: '10', suit: 'SPADE', type: 'Starvation' },\n    { value: 'J', suit: 'SPADE', type: 'Chains' },\n    { value: 'J', suit: 'SPADE', type: 'Steal' },\n    { value: 'J', suit: 'SPADE', type: 'Negate' },\n    { value: 'Q', suit: 'SPADE', type: 'Serpent Spear' },\n    { value: 'Q', suit: 'SPADE', type: 'Chains' },\n    { value: 'Q', suit: 'SPADE', type: 'Break' },\n    { value: 'K', suit: 'SPADE', type: 'Da Yuan' },\n    { value: 'K', suit: 'SPADE', type: 'Negate' },\n    { value: 'K', suit: 'SPADE', type: 'Barbarians' },\n];\n\nexport default function setup(ctx, setupData) {\n    const { numPlayers, playOrder, random } = ctx;\n    const expansions = (setupData || {}).expansions || [];\n\n    const unshuffledRoles = [];\n    ROLE_DIST_LABELS.forEach((role, i) => {\n        for (let j = 0; j < ROLE_DIST[numPlayers][i]; j++) {\n            unshuffledRoles.push({ name: role });\n        }\n    });\n    const roles = random.Shuffle(unshuffledRoles);\n    for (let i = 0; i < roles.length; i++) {\n        roles[i].id = `role-${i}`;\n    }\n    const startPlayerIndex = roles.findIndex(role => role.name === 'King');\n\n    const allCharacters = CHARACTERS.filter(c => c.expansion === undefined || expansions.includes(c.expansion));\n    const numCharacterChoices = 3 * (numPlayers + 1) <= allCharacters.length ? 3 : 2;\n    const monarchChoices = random.Shuffle(allCharacters.filter(c => c.isMonarch));\n    const normalCharacters = random.Shuffle(allCharacters.filter(c => !monarchChoices.includes(c)));\n    const characterChoices = Object.fromEntries(playOrder.map((player, i) =>\n        [player, normalCharacters.slice(numCharacterChoices * i, numCharacterChoices * (i + 1))]));\n    if (monarch) {\n        characterChoices[playOrder[startPlayerIndex]].push(...monarchChoices.slice(0, numCharacterChoices));\n    }\n    \n    const characters = {};\n    const healths = {};\n    const isAlive = Object.fromEntries(playOrder.map(player => [player, true]));\n\n    const unshuffledDeck = CARDS.map(card => { return { ...card } });\n    const deck = random.Shuffle(unshuffledDeck);\n    for (let i = 0; i < deck.length; i++) {\n        deck[i].id = `card-${i}`;\n    }\n    const discard = [];\n\n    const hands = Object.fromEntries(playOrder.map(player => [player, []]));\n    const equipment = Object.fromEntries(playOrder.map(player => [player, {}]));\n    const isChained = {};\n    const isFlipped = {};\n    const harvest = [];\n    const privateZone = [];\n    const refusingDeath = [1];\n\n    return {\n        roles,\n        startPlayerIndex,\n        characterChoices,\n        characters,\n        healths,\n        isAlive,\n        deck,\n        discard,\n        hands,\n        equipment,\n        isChained,\n        isFlipped,\n        harvest,\n        privateZone,\n        refusingDeath,\n    };\n}\n","export function drawCard(G, ctx) {\n    const { deck, discard, isFlipped } = G;\n    const { random } = ctx;\n\n    const card = deck.pop();\n    if (deck.length === 0) {\n        // shuffle cards in discard back into the deck\n        deck.push(...random.Shuffle([]));\n    }\n    if (isFlipped[card.id]) {\n        delete isFlipped[card.id];\n    }\n    return card;\n}\n\nexport function drawCards(G, ctx, playerID, count) {\n    const { hands } = G;\n    for (let i = 0; i < count; i++) {\n        const card = drawCard(G, ctx);\n        hands[playerID].push(card);\n    }\n}\n\nexport function discard(G, ctx, card) {\n    const { deck, discard } = G;\n    const { random } = ctx;\n\n    discard.push(card);\n    if (deck.length === 0) {\n        deck.push(...random.Shuffle(discard.splice(0, discard.length)));\n    }\n}\n\nexport function nextAlivePlayerPos(G, ctx, pos) {\n    const { isAlive } = G;\n    const { numPlayers, playOrder } = ctx;\n    let newPos = pos;\n    do {\n        newPos = (newPos + 1) % numPlayers;\n    } while (!isAlive[playOrder[newPos]]);\n    return newPos;\n}\n","import { EQUIPMENT } from './cardCategories.js';\nimport setup from './setup.js';\nimport monarch from './setup.js';\nimport { drawCard, drawCards, discard, nextAlivePlayerPos } from './helper.js';\n\n/* Moves */\n\nfunction selectCharacter(G, ctx, index) {\n    const { startPlayerIndex, characterChoices, characters, healths } = G;\n    const { numPlayers, playerID, playOrder } = ctx;\n    const character = characterChoices[playerID][index];\n    characterChoices[playerID] = undefined;\n    characters[playerID] = character;\n    let maxHealth = character.health;\n    if (numPlayers >= 4 && playOrder[startPlayerIndex] === playerID && monarch) {\n        // if >= 4 players, add 1 extra health for the King\n        maxHealth++;\n    }\n    healths[playerID] = {\n        max: maxHealth,\n        current: maxHealth,\n    };\n}\n\nfunction draw(G, ctx) {\n    const { hands } = G;\n    const { playerID } = ctx;\n    const card = drawCard(G, ctx);\n    hands[playerID].push(card);\n}\n\nfunction judgment(G, ctx) {\n    const card = drawCard(G, ctx);\n    discard(G, ctx, card);\n}\n\nfunction play(G, ctx, index, targetPlayerID, forceCategory) {\n    const { hands, equipment, isFlipped } = G;\n    const { playerID } = ctx;\n    const [card] = hands[playerID].splice(index, 1);\n    if (card === undefined) {\n        return;\n    }\n    const category = forceCategory || EQUIPMENT[card.type];\n    if (!isFlipped[card.id] && category) {\n        if (targetPlayerID === undefined) {\n            targetPlayerID = playerID;\n        }\n        if (equipment[targetPlayerID][category]) {\n            discard(G, ctx, equipment[targetPlayerID][category]);\n        }\n        equipment[targetPlayerID][category] = card;\n    } else {\n        discard(G, ctx, card);\n    }\n}\n\nfunction pickUp(G, ctx, index) {\n    const { discard, hands } = G;\n    const { playerID } = ctx;\n    const [card] = discard.splice(index, 1);\n    hands[playerID].push(card);\n}\n\nfunction give(G, ctx, index, otherPlayerID) {\n    const { hands } = G;\n    const { playerID } = ctx;\n    const [card] = hands[playerID].splice(index, 1);\n    if (card === undefined) {\n        return;\n    }\n    hands[otherPlayerID].push(card);\n}\n\nfunction dismantle(G, ctx, target) {\n    const { hands, equipment } = G;\n    if (target.index !== undefined) {\n        const [card] = hands[target.playerID].splice(target.index, 1);\n        discard(G, ctx, card);\n    } else {\n        const card = equipment[target.playerID][target.category];\n        equipment[target.playerID][target.category] = undefined;\n        discard(G, ctx, card);\n    }\n}\n\nfunction steal(G, ctx, target) {\n    const { hands, equipment } = G;\n    const { playerID } = ctx;\n    if (target.index !== undefined) {\n        const [card] = hands[target.playerID].splice(target.index, 1);\n        hands[playerID].push(card);\n    } else {\n        const card = equipment[target.playerID][target.category];\n        equipment[target.playerID][target.category] = undefined;\n        hands[playerID].push(card);\n    }\n}\n\nfunction toggleChain(G, ctx) {\n    const { isChained } = G;\n    const { playerID } = ctx;\n    isChained[playerID] = !isChained[playerID];\n}\n\nfunction flipObject(G, _ctx, objectID) {\n    const { isFlipped } = G;\n    isFlipped[objectID] = !isFlipped[objectID];\n}\n\nfunction reveal(G, ctx, index, otherPlayerID) {\n    const { hands, privateZone } = G;\n    const { playerID } = ctx;\n    const [card] = hands[playerID].splice(index, 1);\n    if (card === undefined) {\n        return;\n    }\n    privateZone.push({\n        card,\n        source: { playerID },\n        visibleTo: [playerID, otherPlayerID],\n    });\n}\n\nfunction returnCard(G, _ctx, id) {\n    const { deck, hands, privateZone } = G;\n    const index = privateZone.findIndex(item => item.card.id === id);\n    const [{ card, source }] = privateZone.splice(index, 1);\n    if (source.playerID !== undefined) {\n        hands[source.playerID].push(card);\n    } else if (source.deck) {\n        deck.push(card);\n    }\n}\n\nfunction harvest(G, ctx) {\n    const { isAlive, harvest } = G;\n    const { playOrder } = ctx;\n    const numPlayers = playOrder.filter(player => isAlive[player]).length;\n    for (let i = 0; i < numPlayers; i++) {\n        const card = drawCard(G, ctx);\n        harvest.push(card);\n    }\n}\n\nfunction putDownHarvest(G, ctx, index) {\n    const { hands, harvest } = G;\n    const { playerID } = ctx;\n    const [card] = hands[playerID].splice(index, 1);\n    if (card === undefined) {\n        return;\n    }\n    harvest.push(card);\n}\n\nfunction pickUpHarvest(G, ctx, index) {\n    const { hands, harvest } = G;\n    const { playerID } = ctx;\n    const [card] = harvest.splice(index, 1);\n    hands[playerID].push(card);\n}\n\nfunction finishHarvest(G) {\n    const { discard, harvest } = G;\n    discard.push(...harvest.splice(0, harvest.length).reverse());\n}\n\nfunction passLightning(G, ctx) {\n    const { equipment } = G;\n    const { numPlayers, playOrder } = ctx;\n    for (let i = 0; i < numPlayers; i++) {\n        if (equipment[playOrder[i]]['Lightning'] !== undefined) {\n            const newPos = nextAlivePlayerPos(G, ctx, i);\n            equipment[playOrder[newPos]]['Lightning'] = equipment[playOrder[i]]['Lightning'];\n            equipment[playOrder[i]]['Lightning'] = undefined;\n            return;\n        }\n    }\n}\n\nfunction astrology(G, ctx, numCards) {\n    const { isAlive, privateZone } = G;\n    const { playerID, playOrder } = ctx;\n    const actualNumCards = numCards || Math.min(playOrder.filter(player => isAlive[player]).length, 5);\n    for (let i = 0; i < actualNumCards; i++) {\n        const card = drawCard(G, ctx);\n        privateZone.push({\n            card,\n            source: { deck: true },\n            visibleTo: [playerID],\n        });\n    }\n}\n\nfunction finishAstrology(G) {\n    const { deck, privateZone } = G;\n    deck.splice(0, 0, ...privateZone.filter(item => item.source.deck).map(item => item.card));\n    G.privateZone = privateZone.filter(item => !item.source.deck);\n}\n\nfunction refusingDeath(G, ctx, change) {\n    const { healths, refusingDeath } = G;\n    const { playerID, random } = ctx;\n    if (change === -1) {\n        const newValue = random.Die(13);\n        refusingDeath.push(newValue);\n        healths[playerID].current = 0;\n    } else if (change === 1) {\n        refusingDeath.pop();\n        if (refusingDeath.length === 0) {\n            healths[playerID].current = 1;\n            refusingDeath.push(1);\n        }\n    }\n}\n\nfunction alliance(G, _ctx, player1, player2) {\n    const { hands } = G;\n    const temp = hands[player1];\n    hands[player1] = hands[player2];\n    hands[player2] = temp;\n}\n\nfunction collapse(G, ctx) {\n    const { healths } = G;\n    const { playerID } = ctx;\n    healths[playerID].max--;\n    if (healths[playerID].max < 0) {\n        healths[playerID].max = 8;\n    }\n    if (healths[playerID].current > healths[playerID].max) {\n        healths[playerID].current--;\n    }\n}\n\nfunction updateHealth(G, ctx, change) {\n    const { healths } = G;\n    const { playerID } = ctx;\n    healths[playerID].current += change;\n    if (healths[playerID].current > healths[playerID].max) {\n        healths[playerID].current = healths[playerID].max;\n    }\n    if (healths[playerID].current < 0) {\n        healths[playerID].current = 0;\n    }\n}\n\nfunction die(G, ctx) {\n    const { isAlive } = G;\n    const { currentPlayer, events, playerID } = ctx;\n    delete isAlive[playerID];\n    if (currentPlayer === playerID) {\n        events.endTurn();\n    }\n}\n\nfunction endPlay(G, ctx) {\n    const { healths, hands } = G;\n    const { currentPlayer, events, playerID } = ctx;\n    if (currentPlayer === playerID) {\n        events.setStage('discard');\n        if (hands[playerID].length <= healths[playerID].current) {\n            events.endTurn();\n        }\n    }\n}\n\nfunction discardCard(G, ctx, index) {\n    const { healths, hands } = G;\n    const { events, playerID } = ctx;\n    const [card] = hands[playerID].splice(index, 1);\n    if (card === undefined) {\n        return;\n    }\n    discard(G, ctx, card);\n    if (hands[playerID].length <= healths[playerID].current) {\n        events.endTurn();\n    }\n}\n\nfunction finishDiscard(_G, ctx) {\n    const { currentPlayer, events, playerID } = ctx;\n    if (currentPlayer === playerID) {\n        events.endTurn();\n    }\n}\n\n/* Game object */\n\nconst turnOrder = {\n    first: G => G.startPlayerIndex,\n    next: (G, ctx) => nextAlivePlayerPos(G, ctx, ctx.playOrderPos),\n};\n\nexport const SanGuoSha = {\n    name: \"san-guo-sha\",\n\n    setup,\n\n    playerView: (G, ctx, playerID) => {\n        const { roles, characterChoices, characters, isAlive } = G;\n        const { numPlayers, playOrder } = ctx;\n\n        const newRoles = { ...roles };\n        for (let i = 0; i < numPlayers; i++) {\n            if (playOrder[i] !== playerID && isAlive[playOrder[i]] && newRoles[i].name !== 'King') {\n                newRoles[i] = {id: roles[i].id};\n            }\n        }\n\n        const newCharacters = { ...characters };\n        const areAllCharactersChosen = Object.values(characterChoices).every(choices => choices === undefined);\n        if (!areAllCharactersChosen) {\n            for (let i = 0; i < numPlayers; i++) {\n                if (playOrder[i] !== playerID && newRoles[i].name !== 'King') {\n                    delete newCharacters[playOrder[i]];\n                }\n            }\n        }\n\n        return {\n            ...G,\n            roles: newRoles,\n            characters: newCharacters,\n        };\n    },\n\n    phases: {\n        selectCharacters: {\n            start: true,\n\n            onBegin: (G, ctx) => {\n                const { startPlayerIndex } = G;\n                const { events, playOrder } = ctx;\n                events.setActivePlayers({\n                    value: {[playOrder[startPlayerIndex]]: 'selectCharacter'},\n                    moveLimit: 1,\n                    next: {\n                        others: 'selectCharacter',\n                        moveLimit: 1,\n                    }\n                });\n\n                // make character choices automatically for easier testing\n                // TODO remove\n                //playOrder.forEach(player => selectCharacter(G, { ...ctx, playerID: player }, 0));\n            },\n\n            // end select characters phase if everyone has made a character choice\n            endIf: G => Object.values(G.characterChoices).every(choices => choices === undefined),\n\n            next: 'play',\n\n            turn: {\n                order: turnOrder,\n                stages: {\n                    selectCharacter: {\n                        moves: { selectCharacter },\n                    },\n                },\n            }\n        },\n\n        play: {\n            onBegin: (G, ctx) => {\n                const { playOrder } = ctx;\n                playOrder.forEach(player => drawCards(G, ctx, player, 4));\n            },\n\n            turn: {\n                order: turnOrder,\n                onBegin: (_G, ctx) => {\n                    const { events } = ctx;\n                    // everyone can play cards in freeform mode\n                    events.setActivePlayers({ all: 'play' });\n                },\n                stages: {\n                    play: {\n                        moves: {\n                            draw,\n                            judgment,\n                            play,\n                            pickUp,\n                            give,\n                            dismantle,\n                            steal,\n                            toggleChain,\n                            flipObject,\n                            reveal,\n                            returnCard,\n                            harvest,\n                            putDownHarvest,\n                            pickUpHarvest,\n                            finishHarvest,\n                            passLightning,\n                            astrology,\n                            finishAstrology,\n                            refusingDeath,\n                            alliance,\n                            collapse,\n                            updateHealth,\n                            die,\n                            endPlay,\n                         },\n                    },\n                    discard: {\n                        moves: { pickUp, discardCard, finishDiscard },\n                    },\n                },\n            },\n        },\n    },\n\n    minPlayers: 2,\n\n    maxPlayers: 10,\n\n    endIf: (G, ctx) => {\n        const { isAlive } = G;\n        const { playOrder } = ctx;\n        return playOrder.filter(player => isAlive[player]).length === 1;\n    },\n};\n","import React from 'react';\nimport { ROLE_DIST } from '../lib/roles';\nimport './setModePanel.css';\n\nexport default class SetModePanel extends React.Component {\n\n    static DEFAULT_MODE = 'Default';\n    static GIVE_MODE = 'Give';\n    static DISMANTLE_MODE = 'Dismantle';\n    static STEAL_MODE = 'Steal';\n    static REVEAL_MODE = 'Reveal';\n    static FLIP_MODE = 'Flip';\n    static HELP_MODE = 'Help';\n    static SHOW_HOTKEYS_MODE = 'Hotkeys';\n    static GIVE_JUDGMENT_MODE = 'Give Judgment';\n    static COUNTRY_SCENE_MODE = 'Country Scene';\n    static BLOCKADE_MODE = 'Blockade';\n    static ALLIANCE_MODE = 'Alliance';\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleHotkey);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleHotkey);\n    }\n\n    render() {\n        const { moves } = this.props;\n        return <div className='set-mode-panel'>\n            <div className='section'>\n                {this.renderButton(SetModePanel.DEFAULT_MODE)}\n                {this.renderButton(SetModePanel.GIVE_MODE)}\n                {this.renderButton(SetModePanel.DISMANTLE_MODE)}\n                {this.renderButton(SetModePanel.STEAL_MODE)}\n                {this.renderButton(SetModePanel.REVEAL_MODE)}\n                {this.renderButton(SetModePanel.FLIP_MODE)}\n                {this.renderSpecialModeButton()}\n                {this.renderButton(SetModePanel.HELP_MODE)}\n                {this.renderButton(SetModePanel.SHOW_HOTKEYS_MODE)}\n            </div>\n            <div className='section'>\n                <button\n                    className='clickable'\n                    onClick={() => moves.judgment()}\n                >\n                    {'Judgment'}\n                </button>\n                {this.renderHarvestButton()}\n                <button\n                    className='clickable'\n                    onClick={() => moves.passLightning()}\n                >\n                    {'Lightning'}\n                </button>\n                {this.renderFinishDiscardButton()}\n                {this.renderSpecialButton()}\n                {this.renderHotkeys()}\n            </div>\n        </div>\n    }\n\n    renderButton(targetMode) {\n        const { mode, setMode } = this.props;\n        return <button\n            className={mode === targetMode ? 'toggled' : 'selectable'}\n            disabled={mode === targetMode}\n            onClick={() => setMode(targetMode)}\n        >\n            {targetMode}\n        </button>\n    }\n\n    renderHarvestButton() {\n        const { G, moves } = this.props;\n        const { harvest } = G;\n        if (harvest.length === 0) {\n            return <button\n                className='clickable'\n                onClick={() => moves.harvest()}\n            >\n                {'Harvest'}\n            </button>;\n        } else {\n            return <button\n                className='clickable'\n                onClick={() => moves.finishHarvest()}\n            >\n                {'Finish'}\n            </button>;\n        }\n    }\n\n    renderFinishDiscardButton() {\n        const { moves } = this.props;\n        if (this.stage() === 'discard') {\n            return <button\n                className='clickable'\n                onClick={() => moves.finishDiscard()}\n            >\n                {'No discard'}\n            </button>\n        }\n    }\n\n    renderSpecialModeButton() {\n        const { G, playerID } = this.props;\n        const { characters } = G;\n        const character = characters[playerID];\n        if (character === undefined) {\n            return;\n        }\n        if (character.name === 'Da Qiao') {\n            return this.renderButton(SetModePanel.COUNTRY_SCENE_MODE);\n        }\n        if (character.name === 'Xu Huang') {\n            return this.renderButton(SetModePanel.BLOCKADE_MODE);\n        }\n        if (character.name === 'Lu Su') {\n            return this.renderButton(SetModePanel.ALLIANCE_MODE);\n        }\n    }\n\n    renderSpecialButton() {\n        const { G, ctx, moves, playerID } = this.props;\n        const { characters, privateZone } = G;\n        const { currentPlayer } = ctx;\n        const character = characters[playerID];\n        if (character === undefined) {\n            return;\n        }\n        if (character.name === 'Zhuge Liang' && currentPlayer === playerID) {\n            const doingAstrology = privateZone.filter(item => item.source.deck).length > 0;\n            if (doingAstrology) {\n                return <button\n                    className='clickable'\n                    onClick={() => moves.finishAstrology()}\n                >\n                    {'Finish'}\n                </button>;\n            } else {\n                return <button\n                    className='clickable'\n                    onClick={() => moves.astrology()}\n                >\n                    {'Astrology'}\n                </button>;\n            }\n        }\n        if (character.name === 'Dong Zhuo') {\n            return <button\n                className='clickable'\n                onClick={() => moves.collapse()}\n            >\n                {'Collapse'}\n            </button>;\n        }\n    }\n\n    renderHotkeys() {\n        const { mode, setMode } = this.props;\n        if (mode === SetModePanel.SHOW_HOTKEYS_MODE) {\n            return <div\n                className='hotkeys-panel'\n            >\n                {this.renderRoleDistribution()}\n                <table><tbody></tbody></table>\n                <div>Modifier hotkeys: press the hotkey to modify what your next click will do.</div>\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>Esc</td>\n                            <td>Return to default mode</td>\n                        </tr>\n                        <tr>\n                            <td>G</td>\n                            <td>Give your next selected card to someone else</td>\n                        </tr>\n                        <tr>\n                            <td>D</td>\n                            <td>Discard/dismantle your next selected card</td>\n                        </tr>\n                        <tr>\n                            <td>S</td>\n                            <td>Steal your next selected card into your hand</td>\n                        </tr>\n                        <tr>\n                            <td>R</td>\n                            <td>Reveal your next selected card to someone else</td>\n                        </tr>\n                        <tr>\n                            <td>F</td>\n                            <td>Flip your next selected card</td>\n                        </tr>\n                        <tr>\n                            <td>H</td>\n                            <td>Render help for the selected card</td>\n                        </tr>\n                    </tbody>\n                </table>\n                <div>Action hotkeys: press the hotkey to trigger an action immediately.</div>\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>1-9</td>\n                            <td>Play the Nth card in your hand</td>\n                        </tr>\n                        <tr>\n                            <td>J</td>\n                            <td>Flip over a judgment card from the deck</td>\n                        </tr>\n                        <tr>\n                            <td>V</td>\n                            <td>Turn over N cards from the deck for harvest</td>\n                        </tr>\n                        <tr>\n                            <td>L</td>\n                            <td>Pass lightning card to the next player</td>\n                        </tr>\n                        <tr>\n                            <td>C</td>\n                            <td>Draw a card into your hand</td>\n                        </tr>\n                        <tr>\n                            <td>Q</td>\n                            <td>Decrease your health by 1</td>\n                        </tr>\n                        <tr>\n                            <td>W</td>\n                            <td>Increase your health by 1</td>\n                        </tr>\n                        <tr>\n                            <td>T</td>\n                            <td>Toggle your chain state</td>\n                        </tr>\n                        <tr>\n                            <td>E</td>\n                            <td>End your play phase (and start discard phase)</td>\n                        </tr>\n                        <tr>\n                            <td>N</td>\n                            <td>No discard (force end turn without discarding)</td>\n                        </tr>\n                        <tr>\n                            <td>?</td>\n                            <td>Open this menu</td>\n                        </tr>\n                    </tbody>\n                </table>\n                <button\n                    className='selectable'\n                    onClick={() => setMode(SetModePanel.DEFAULT_MODE)}\n                >\n                    {'X'}\n                </button>\n            </div>;\n        }\n    }\n\n    handleHotkey = e => {\n        const { G, moves, setMode, selectFunction } = this.props;\n        const { harvest } = G;\n        if (e.altKey || e.ctrlKey || e.metaKey) {\n            return;\n        }\n        switch (e.key) {\n            case \"Escape\":\n                setMode(SetModePanel.DEFAULT_MODE);\n                break;\n            case \"g\":\n                setMode(SetModePanel.GIVE_MODE);\n                break;\n            case \"d\":\n                setMode(SetModePanel.DISMANTLE_MODE);\n                break;\n            case \"s\":\n                setMode(SetModePanel.STEAL_MODE);\n                break;\n            case \"r\":\n                setMode(SetModePanel.REVEAL_MODE);\n                break;\n            case \"f\":\n                setMode(SetModePanel.FLIP_MODE);\n                break;\n            case \"h\":\n                setMode(SetModePanel.HELP_MODE);\n                break;\n            case \"/\":\n            case \"?\":\n                setMode(SetModePanel.SHOW_HOTKEYS_MODE);\n                break;\n            case \"j\":\n                moves.judgment();\n                break;\n            case \"v\":\n                (harvest.length === 0 ? moves.harvest : moves.finishHarvest)();\n                break;\n            case \"l\":\n                moves.passLightning();\n                break;\n            case \"c\":\n                moves.draw();\n                break;\n            case \"q\":\n                moves.updateHealth(-1);\n                break;\n            case \"w\":\n                moves.updateHealth(+1);\n                break;\n            case \"t\":\n                moves.toggleChain();\n                break;\n            case \"e\":\n                moves.endPlay();\n                break;\n            case \"n\":\n                moves.finishDiscard();\n                break;\n            default:\n                break;\n        }\n        if (e.keyCode >= 49 && e.keyCode <= 57) {\n            const func = selectFunction(e.keyCode - 49);\n            if (func) {\n                func();\n            }\n        }\n    };\n\n    renderRoleDistribution() {\n        const { ctx } = this.props;\n        const { numPlayers } = ctx;\n        const [numKings, numRebels, numLoyalists, numSpies] = ROLE_DIST[numPlayers];\n        return <div>\n            This game has {numKings} {numKings !== 1 ? 'kings' : 'king'},{' '}\n            {numRebels} {numRebels !== 1 ? 'rebels' : 'rebel'},{' '}\n            {numLoyalists} {numLoyalists !== 1 ? 'loyalists' : 'loyalist'}, and{' '}\n            {numSpies} {numSpies !== 1 ? 'spies' : 'spy'}.\n        </div>\n    }\n\n    stage() {\n        const { ctx, playerID } = this.props;\n        const { activePlayers } = ctx;\n        return activePlayers && activePlayers[playerID];\n    }\n}\n","import * as classNames from 'classnames';\nimport React from 'react';\nimport { useTransition } from 'react-spring';\n\nexport default props => {\n    const {\n        items, // [{ key, onClick, ...otherProps }]\n        from, // item => { ...otherProps }\n        update, // item => { ...otherProps }\n        clickable, // boolean\n        animated, // (item, props) => <animated className='positioned item' />\n    } = props;\n\n    const transitions = useTransition(items, item => item.key, {\n        from,\n        enter: update,\n        update,\n        leave: from,\n        unique: true,\n    });\n\n    return transitions.map(({ item, props }) => {\n        let child = animated(item, props);\n        if (clickable) {\n            child = <div\n                key={item.key}\n                className={classNames('positioned', { 'selectable': item.onClick !== undefined })}\n                onClick={item.onClick}\n            >\n                {child}\n            </div>;\n        }\n        return child;\n    });\n}\n","import * as classNames from 'classnames';\nimport React from 'react';\nimport { animated, interpolate } from 'react-spring';\nimport AnimatedItems from './animatedItems';\nimport './animatedBoard.css';\n\nconst SUITS = {\n    'CLUB': '♣',\n    'DIAMOND': '♢',\n    'HEART': '♡',\n    'SPADE': '♠',\n};\n\nexport default class AnimatedBoard extends React.Component {\n\n    render() {\n        const { width, height, scaledWidth, scaledHeight, characterCards, healthPoints, normalCards } = this.props;\n        return <div>\n            <AnimatedItems\n                items={characterCards}\n                from={_ => { return { opacity: 0 }; }}\n                update={item => {\n                    return {\n                        faceUp: item.faceUp ? 1 : 0,\n                        opacity: item.opacity,\n                        left: item.left,\n                        top: item.top,\n                    };\n                }}\n                clickable={true}\n                animated={(item, props) => {\n                    const { faceUp, opacity, left, top } = props;\n                    return <animated.img\n                        className='positioned item shadow'\n                        src={faceUp.interpolate(faceUp => faceUp > 0.5 ? `./characters/${item.name}.jpg` : './characters/Character Back.jpg')}\n                        alt={item.name}\n                        style={{\n                            transform: faceUp.interpolate(faceUp => `rotateY(${faceUp * 180 - (faceUp > 0.5 ? 180 : 0)}deg)`),\n                            opacity,\n                            left,\n                            top,\n                            width: item.width,\n                            height: item.height,\n                        }} />;\n                }}\n            />\n            <AnimatedItems\n                items={healthPoints}\n                from={_ => { return { opacity: 0, left: 0, top: 0, width, height } }}\n                update={item => { return { opacity: 1, left: item.left, top: item.top, width: item.width, height: item.height } }}\n                animated={(item, props) => <animated.img\n                    key={item.key}\n                    className='positioned item'\n                    src={`./health/health-${item.color}.png`}\n                    alt='health'\n                    style={{\n                        opacity: props.opacity,\n                        left: props.left,\n                        top: props.top,\n                        width: props.width,\n                        height: props.height,\n                    }}\n                />}\n            />\n            <AnimatedItems\n                items={normalCards}\n                from={_ => { return { opacity: 0 } }}\n                update={item => {\n                    return {\n                        faceUp: item.faceUp ? 1 : 0,\n                        sideways: item.sideways ? 1 : 0,\n                        opacity: item.opacity,\n                        left: item.left,\n                        top: item.top,\n                        scale: item.scale,\n                    };\n                }}\n                clickable={true}\n                animated={(item, props) => {\n                    const { faceUp, sideways, opacity, left, top, scale } = props;\n                    return <animated.div\n                        className='positioned'\n                        style={{\n                            transformOrigin: '0 0',\n                            transform: interpolate([sideways, scale], (sideways, scale) => `scale(${scale}) rotateZ(${sideways * 90}deg)`),\n                            opacity,\n                            left,\n                            top,\n                            width: scaledWidth,\n                            height: scaledHeight,\n                        }}\n                    >\n                        <animated.div\n                            className={classNames('positioned', 'item', item.className)}\n                            style={{\n                                transform: faceUp.interpolate(faceUp => `rotateY(${faceUp * 180 - (faceUp > 0.5 ? 180 : 0)}deg)`),\n                                left: 0,\n                                top: 0,\n                                width: '100%',\n                                height: '100%',\n                            }}\n                        >\n                            <animated.img\n                                className='fill'\n                                src={faceUp.interpolate(faceUp => faceUp > 0.5 ? `./cards/${item.card.type}.jpg` : './cards/Card Back.jpg')}\n                                alt={'card'}\n                            />\n                            <animated.div\n                                className={classNames('card-value', ['DIAMOND', 'HEART'].includes(item.card.suit) ? 'red' : 'black')}\n                                style={{\n                                    opacity: faceUp,\n                                }}\n                            >\n                                {item.card.value}\n                                <br />\n                                {SUITS[item.card.suit]}\n                            </animated.div>\n                        </animated.div>\n                    </animated.div>\n                }}\n            />\n        </div>\n    }\n}\n","import * as classNames from 'classnames';\nimport React from 'react';\nimport { BASIC, EQUIPMENT } from '../lib/cardCategories.js';\nimport RULES from '../lib/rules.json';\nimport SetModePanel from './setModePanel';\nimport AnimatedBoard from './animatedBoard';\nimport './gameArea.css';\n\nimport monarch from '../lib/setup.js';\n\n// Standard margin between objects\nconst DELTA = 10;\n\n// Number of pixels between info objects inside the character card to the character card's border\nconst INFO_DELTA = 4;\n\n// Ratio of ratio card to normal cards\nconst ROLE_RATIO = 0.25;\n\n// Ratio of other player hand cards and equipment cards to normal cards\nconst CARD_RATIO = 0.3;\n\n// Ratio of cards in the deck to normal cards\nconst DECK_RATIO = 0.5;\n\n// Ratio of cards in the middle to normal cards\nconst MIDDLE_CARD_RATIO = 0.7;\n\nexport default class GameArea extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode: SetModePanel.DEFAULT_MODE,\n            selectedIndex: undefined,\n            helpCard: undefined,\n        };\n    }\n\n    componentDidUpdate() {\n        const { G, ctx, events, moves } = this.props;\n        window.sanguosha = { G, ctx, events, moves };\n    }\n\n    render() {\n        const { G, ctx, playerID, width, height, playerAreas, scaledWidth, scaledHeight } = this.props;\n        const { characters } = G;\n        const { numPlayers, playOrder } = ctx;\n\n        const characterCards = [];\n        const healthPoints = [];\n        const normalCards = [];\n        const nodes = [];\n\n        const myPlayerIndex = Math.max(playOrder.indexOf(playerID), 0);\n        playerAreas.forEach((playerArea, i) => {\n            const playerIndex = (myPlayerIndex + i) % numPlayers;\n            const player = playOrder[playerIndex];\n\n            this.addPlayerName(playerArea, playerIndex, player, nodes);\n            this.addCharacterRole(playerArea, playerIndex, nodes);\n\n            const character = characters[player];\n            this.addCharacterCard(playerArea, character, player, characterCards);\n            if (!character) {\n                return;\n            }\n\n            this.addHealth(playerArea, player, healthPoints, nodes);\n            this.addChain(playerArea, player, nodes);\n            this.addPlayerEquipment(playerArea, player, normalCards);\n            if (player !== playerID) {\n                this.addOtherPlayerHand(playerArea, player, normalCards, nodes);\n            }\n        });\n\n        this.addCharacterChoices(characterCards);\n\n        this.addDeck(normalCards);\n        this.addMyHand(normalCards);\n\n        // Once cards of some type are found, remaining cards are rendered transparently.\n        // We splice from the beginning so that these transparent cards don't block existing ones.\n        const middleCards = [];\n        middleCards.splice(0, 0, ...this.getPrivateZoneCards(middleCards.length > 0));\n        middleCards.splice(0, 0, ...this.getHarvestCards(middleCards.length > 0));\n        middleCards.splice(0, 0, ...this.getDiscardCards(middleCards.length > 0));\n        normalCards.push(...middleCards);\n\n        return <div>\n            {this.renderMyArea()}\n            <AnimatedBoard\n                width={width}\n                height={height}\n                scaledWidth={scaledWidth}\n                scaledHeight={scaledHeight}\n                characterCards={characterCards}\n                healthPoints={healthPoints}\n                normalCards={normalCards}\n            />\n            {nodes}\n            {this.renderActionButton()}\n            {this.renderHelp()}\n            {this.renderSetModePanel()}\n        </div>;\n    }\n\n    addCharacterChoices(characterCards) {\n        const { G, playerID, width, height, scaledWidth, scaledHeight } = this.props;\n        const { mode, selectedIndex } = this.state;\n        const { characterChoices } = G;\n        const choices = characterChoices[playerID];\n        if (this.stage() === 'selectCharacter' && choices !== undefined) {\n            const startX = (width - choices.length * scaledWidth - (choices.length - 1) * DELTA) / 2;\n            choices.forEach((choice, i) => {\n                let onClick;\n                if (mode === SetModePanel.DEFAULT_MODE) {\n                    onClick = () => this.setState({ selectedIndex: i === selectedIndex ? undefined : i });\n                } else if (mode === SetModePanel.HELP_MODE) {\n                    onClick = () => this.setState({ helpCard: { key: choice.name, src: `./characters/${choice.name}.jpg` } });\n                }\n                characterCards.push({\n                    key: `character-${choice.name}`,\n                    name: choice.name,\n                    faceUp: true,\n                    opacity: 1,\n                    left: startX + (scaledWidth + DELTA) * i,\n                    top: (height - scaledHeight) / 2 - (i === selectedIndex ? 20 : 0),\n                    width: scaledWidth,\n                    height: scaledHeight,\n                    onClick,\n                });\n            });\n        }\n    }\n\n    addPlayerName(playerArea, playerIndex, player, nodes) {\n        const { ctx, playerID, matchData, scaledWidth, scaledHeight } = this.props;\n        const { currentPlayer } = ctx;\n        if (matchData !== undefined && player !== playerID) {\n            nodes.push(<div\n                key={`name-${playerIndex}`}\n                className={classNames('positioned player-name', { 'current-player': currentPlayer === player })}\n                style={{\n                    left: playerArea.x + INFO_DELTA,\n                    top: playerArea.y + scaledHeight + INFO_DELTA,\n                    width: scaledWidth - 2 * INFO_DELTA,\n                    height: scaledHeight * 0.2,\n                }}\n            >\n                {matchData[playerIndex].name}\n            </div>);\n        }\n    }\n\n    addCharacterRole(playerArea, playerIndex, nodes) {\n        const { G, scaledWidth, scaledHeight } = this.props;\n        const { roles } = G;\n        const role = roles[playerIndex];\n        const roleName = monarch ? (role.name || 'Role Back') : 'Role Back';\n        nodes.push(<img\n            key={`role-${role.id}`}\n            className='positioned'\n            src={`./roles/${roleName}.jpg`}\n            alt={roleName}\n            style={{\n                left: playerArea.x + (1 - ROLE_RATIO) * scaledWidth - INFO_DELTA,\n                top: playerArea.y + INFO_DELTA,\n                width: scaledWidth * ROLE_RATIO,\n                height: scaledHeight * ROLE_RATIO,\n            }}\n        />);\n    }\n\n    addCharacterCard(playerArea, character, player, characterCards) {\n        const { G, moves, scaledWidth, scaledHeight } = this.props;\n        const { mode, selectedIndex } = this.state;\n        const { isAlive, isFlipped } = G;\n        let onClick = undefined;\n        if (mode === SetModePanel.GIVE_MODE && selectedIndex !== undefined) {\n            onClick = () => {\n                moves.give(selectedIndex, player);\n                this.setState({ mode: SetModePanel.DEFAULT_MODE, selectedIndex: undefined });\n            };\n        } else if (mode === SetModePanel.GIVE_JUDGMENT_MODE) {\n            onClick = () => {\n                moves.play(selectedIndex, player);\n                this.setState({ mode: SetModePanel.DEFAULT_MODE });\n            };\n        } else if (mode === SetModePanel.REVEAL_MODE && selectedIndex !== undefined) {\n            onClick = () => {\n                moves.reveal(selectedIndex, player);\n                this.setState({ mode: SetModePanel.DEFAULT_MODE });\n            };\n        } else if (mode === SetModePanel.FLIP_MODE) {\n            onClick = () => {\n                moves.flipObject(player);\n                this.setState({ mode: SetModePanel.DEFAULT_MODE });\n            };\n        } else if (mode === SetModePanel.HELP_MODE) {\n            onClick = () => this.setState({ helpCard: { key: character.name, src: `./characters/${character.name}.jpg` } });\n        } else if (mode === SetModePanel.COUNTRY_SCENE_MODE && selectedIndex !== undefined) {\n            onClick = () => {\n                moves.play(selectedIndex, player, 'Capture');\n                this.setState({ mode: SetModePanel.DEFAULT_MODE });\n            };\n        } else if (mode === SetModePanel.BLOCKADE_MODE && selectedIndex !== undefined) {\n            onClick = () => {\n                moves.play(selectedIndex, player, 'Starvation');\n                this.setState({ mode: SetModePanel.DEFAULT_MODE });\n            };\n        } else if (mode === SetModePanel.ALLIANCE_MODE) {\n            if (selectedIndex === undefined) {\n                onClick = () => this.setState({ selectedIndex: player });\n            } else {\n                onClick = () => {\n                    moves.alliance(selectedIndex, player);\n                    this.setState({ mode: SetModePanel.DEFAULT_MODE, selectedIndex: undefined });\n                };\n            }\n        }\n        characterCards.push({\n            key: character ? `character-${character.name}` : `character-back-${player}`,\n            name: character ? character.name : 'Character Back',\n            faceUp: character !== undefined && !isFlipped[player],\n            opacity: isAlive[player] ? 1 : 0.5,\n            left: playerArea.x,\n            top: playerArea.y,\n            width: scaledWidth,\n            height: scaledHeight,\n            onClick,\n        });\n    }\n\n    addHealth(playerArea, player, healthPoints, nodes) {\n        const { G, moves, playerID, width, height, scaledWidth, scaledHeight } = this.props;\n        const { characters, healths, isAlive, refusingDeath } = G;\n\n        const isRefusingDeath = characters[playerID] && characters[playerID].name === 'Zhou Tai' && healths[player].current <= 0;\n        const isDying = isRefusingDeath ? new Set(refusingDeath).size < refusingDeath.length : healths[player].current <= 0;\n\n        for (let i = 0; i < (isRefusingDeath ? refusingDeath.length : healths[player].max); i++) {\n            const color = !isRefusingDeath && i < healths[player].current ? 'green' : 'red';\n            healthPoints.push({\n                key: `health-${player}-${i}-${color}`,\n                color,\n                left: playerArea.x + scaledWidth * (0.23 + i * 0.06),\n                top: playerArea.y + scaledHeight * 0.01,\n                width: scaledWidth * 0.06,\n                height: scaledHeight * 0.05,\n            });\n        }\n\n        if (isAlive[player] && isDying) {\n            const SAVE_ME_WIDTH = 100; // pixels\n            const SAVE_ME_HEIGHT = 25; // pixels\n            nodes.push(<button\n                key='save-me'\n                className='positioned bad'\n                style={{\n                    left: playerArea.x + (scaledWidth - SAVE_ME_WIDTH) / 2,\n                    top: playerArea.y + (scaledHeight - SAVE_ME_HEIGHT) / 2,\n                    width: SAVE_ME_WIDTH,\n                    height: SAVE_ME_HEIGHT,\n                }}\n                disabled={true}\n            >\n                {'Save me!'}\n            </button>);\n        }\n\n        if (player !== playerID) {\n            return;\n        }\n\n        if (!isDying) {\n            nodes.push(<div\n                key='decrease-health'\n                className='positioned image-div selectable decrease-health'\n                style={{\n                    left: playerArea.x + scaledWidth * 0.23,\n                    top: playerArea.y + scaledHeight * 0.1,\n                    width: scaledWidth * 0.12,\n                    height: scaledHeight * 0.1,\n                }}\n                onClick={() => (isRefusingDeath ? moves.refusingDeath : moves.updateHealth)(-1)}\n            />);\n        } else if (isAlive[playerID]) {\n            const DIE_BUTTON_WIDTH = 180;\n            const DIE_BUTTON_HEIGHT = 30;\n            nodes.push(<button\n                key='die'\n                className={`positioned selectable bad`}\n                style={{\n                    left: (width - DIE_BUTTON_WIDTH) / 2,\n                    top: (height - DIE_BUTTON_HEIGHT) / 2,\n                    width: DIE_BUTTON_WIDTH,\n                    height: DIE_BUTTON_HEIGHT,\n                }}\n                onClick={() => moves.die()}\n            >\n                {'Die'}\n            </button>);\n        }\n        if (healths[playerID].current < healths[playerID].max) {\n            nodes.push(<div\n                key='increase-health'\n                className='positioned image-div selectable increase-health'\n                style={{\n                    left: playerArea.x + scaledWidth * 0.39,\n                    top: playerArea.y + scaledHeight * 0.1,\n                    width: scaledWidth * 0.12,\n                    height: scaledHeight * 0.1,\n                }}\n                onClick={() => (isRefusingDeath ? moves.refusingDeath : moves.updateHealth)(+1)}\n            />);\n        }\n    }\n\n    addChain(playerArea, player, nodes) {\n        const { G, moves, playerID, scaledWidth, scaledHeight } = this.props;\n        const { isChained } = G;\n        let onClick = undefined;\n        if (player === playerID) {\n            onClick = () => moves.toggleChain();\n        }\n        if (player === playerID || isChained[player]) {\n            nodes.push(<div\n                key={`chain-${player}`}\n                className={classNames('positioned image-div chain', { 'gray': !isChained[player] }, { 'selectable': onClick !== undefined })}\n                style={{\n                    left: playerArea.x + (1 - ROLE_RATIO) * scaledWidth - 2 * INFO_DELTA,\n                    top: playerArea.y + scaledHeight * 0.2,\n                    width: scaledWidth * ROLE_RATIO + 2 * INFO_DELTA,\n                    height: scaledHeight * 0.16,\n            }}\n                onClick={onClick}\n            />);\n        }\n    }\n\n    addPlayerEquipment(playerArea, player, normalCards) {\n        const { G, moves, playerID, scaledWidth, scaledHeight } = this.props;\n        const { mode } = this.state;\n        const { equipment, isFlipped } = G;\n        ['Weapon', 'Shield', '+1', '-1', 'Lightning', 'Capture', 'Starvation'].forEach((category, i) => {\n            const card = equipment[player][category];\n            if (card) {\n                let onClick = undefined;\n                if ((mode === SetModePanel.DEFAULT_MODE && player === playerID)\n                    || mode === SetModePanel.DISMANTLE_MODE\n                    || mode === SetModePanel.STEAL_MODE) {\n                    onClick = () => {\n                        (mode === SetModePanel.DEFAULT_MODE || mode === SetModePanel.DISMANTLE_MODE ? moves.dismantle : moves.steal)({\n                            playerID: player,\n                            category,\n                        });\n                        this.setState({ mode: SetModePanel.DEFAULT_MODE });\n                    };\n                } else if (mode === SetModePanel.HELP_MODE) {\n                    onClick = () => this.setState({ helpCard: { key: card.type, src: `./cards/${card.type}.jpg` } });\n                }\n                if (i < 4) {\n                    // Equipment cards\n                    normalCards.push({\n                        key: `card-${card.id}`,\n                        className: 'small-shadow',\n                        card,\n                        faceUp: !isFlipped[card.id],\n                        opacity: 1,\n                        left: playerArea.x + (scaledWidth - (CARD_RATIO * scaledWidth + INFO_DELTA) * (2 - i % 2)),\n                        top: playerArea.y + (scaledHeight - (CARD_RATIO * scaledHeight + INFO_DELTA) * (2 - Math.floor(i / 2))),\n                        scale: CARD_RATIO,\n                        onClick,\n                    });\n                } else {\n                    // Judgment cards\n                    normalCards.push({\n                        key: `card-${card.id}`,\n                        className: 'small-shadow',\n                        card,\n                        faceUp: true,\n                        sideways: true,\n                        opacity: 1,\n                        left: playerArea.x + scaledWidth * 0.33,\n                        top: playerArea.y + scaledHeight * (0.16 + 0.18 * (i - 4)),\n                        scale: CARD_RATIO,\n                        onClick,\n                    });\n                }\n            }\n        });\n    }\n\n    addOtherPlayerHand(playerArea, player, normalCards, nodes) {\n        const { G, moves, scaledWidth, scaledHeight } = this.props;\n        const { mode } = this.state;\n        const { hands } = G;\n        const hand = hands[player];\n        // Show the card backs\n        hand.forEach(card => {\n            let onClick = undefined;\n            if (mode === SetModePanel.DISMANTLE_MODE || mode === SetModePanel.STEAL_MODE) {\n                onClick = () => {\n                    (mode === SetModePanel.DISMANTLE_MODE ? moves.dismantle : moves.steal)({\n                        playerID: player,\n                        index: Math.floor(Math.random() * hand.length),\n                    });\n                    this.setState({ mode: SetModePanel.DEFAULT_MODE });\n                };\n            }\n            normalCards.push({\n                key: `card-${card.id}`,\n                className: 'small-shadow',\n                card,\n                opacity: 1,\n                left: playerArea.x + INFO_DELTA,\n                top: playerArea.y + (1 - CARD_RATIO) * scaledHeight - INFO_DELTA,\n                scale: CARD_RATIO,\n                onClick,\n            });\n        });\n        // Show the card count\n        if (hand.length > 0) {\n            nodes.push(<div\n                key={`card-count-${player}`}\n                className='game-label'\n                style={{\n                    left: playerArea.x + INFO_DELTA,\n                    top: playerArea.y + (1 - CARD_RATIO) * scaledHeight - INFO_DELTA,\n                    width: scaledWidth * CARD_RATIO,\n                    height: scaledHeight * CARD_RATIO,\n                    marginLeft: scaledWidth * CARD_RATIO * 0.1,\n                    marginTop: scaledWidth * CARD_RATIO * 0.1,\n                    fontSize: scaledWidth * CARD_RATIO * 0.6,\n                }}\n            >\n                {hand.length}\n            </div>);\n        }\n    }\n\n    addDeck(normalCards) {\n        const { G, moves, height, scaledHeight } = this.props;\n        const { mode } = this.state;\n        const { deck, privateZone } = G;\n        const MAX_CARDS_SHOWN = 10;\n        deck.slice(-MAX_CARDS_SHOWN).forEach((card, i) => {\n            let onClick = undefined;\n            if (mode === SetModePanel.DEFAULT_MODE && card === deck[deck.length - 1]) {\n                const doingAstrology = privateZone.filter(item => item.source.deck).length > 0;\n                if (doingAstrology) {\n                    onClick = () => moves.astrology(1);\n                } else {\n                    onClick = () => moves.draw();\n                }\n            }\n            normalCards.push({\n                key: `card-${card.id}`,\n                card,\n                opacity: 1,\n                left: DELTA * (1 - i / MAX_CARDS_SHOWN),\n                top: height - scaledHeight * DECK_RATIO - DELTA * (i / MAX_CARDS_SHOWN),\n                scale: DECK_RATIO,\n                onClick,\n            });\n        });\n    }\n\n    addMyHand(normalCards) {\n        const { G, playerID, width, height, scaledWidth, scaledHeight } = this.props;\n        const { hands, isFlipped } = G;\n        const myHand = hands[playerID];\n        if (myHand) {\n            const spacing = Math.min(scaledWidth + DELTA, (width - (2 + DECK_RATIO) * scaledWidth - 5 * DELTA) / (hands[playerID].length - 1));\n            hands[playerID].forEach((card, i) => {\n                const onClick = this.selectFunction(i);\n                normalCards.push({\n                    key: `card-${card.id}`,\n                    card,\n                    faceUp: !isFlipped[card.id],\n                    opacity: onClick !== undefined ? 1 : 0.3,\n                    left: DECK_RATIO * scaledWidth + 2 * DELTA + spacing * i,\n                    top: height - scaledHeight - DELTA,\n                    scale: 1,\n                    onClick,\n                });\n            })\n        }\n    }\n \n    getPrivateZoneCards(middleCardsFound) {\n        const { G, moves, playerID, width, height, scaledWidth, scaledHeight } = this.props;\n        const { mode } = this.state;\n        const { privateZone } = G;\n        const privateCards = privateZone.filter(item => item.visibleTo.includes(playerID));\n        const startX = (width - privateCards.length * scaledWidth * MIDDLE_CARD_RATIO - (privateCards.length - 1) * DELTA) / 2;\n        const normalCards = [];\n        privateCards.forEach(({ card, visibleTo }, i) => {\n            let onClick = undefined;\n            if (mode === SetModePanel.DEFAULT_MODE) {\n                onClick = () => moves.returnCard(card.id);\n            } else if (mode === SetModePanel.HELP_MODE) {\n                onClick = () => this.setState({ helpCard: { key: card.type, src: `./cards/${card.type}.jpg` } });\n            }\n            normalCards.push({\n                key: `card-${card.id}`,\n                className: 'shadow',\n                card,\n                faceUp: true,\n                opacity: middleCardsFound ? 0 : 1,\n                left: startX + (scaledWidth * MIDDLE_CARD_RATIO + DELTA) * i,\n                top: (height - scaledHeight * MIDDLE_CARD_RATIO) / 2,\n                scale: MIDDLE_CARD_RATIO,\n                onClick: middleCardsFound ? undefined : onClick,\n            });\n        });\n        return normalCards;\n    }\n\n    getHarvestCards(middleCardsFound) {\n        const { G, moves, width, height, scaledWidth, scaledHeight } = this.props;\n        const { mode } = this.state;\n        const { harvest } = G;\n        const startX = (width - harvest.length * scaledWidth * MIDDLE_CARD_RATIO - (harvest.length - 1) * DELTA) / 2;\n        const normalCards = [];\n        harvest.forEach((card, i) => {\n            let onClick = undefined;\n            if (mode === SetModePanel.DEFAULT_MODE) {\n                onClick = () => moves.pickUpHarvest(i);\n            } else if (mode === SetModePanel.HELP_MODE) {\n                onClick = () => this.setState({ helpCard: { key: card.type, src: `./cards/${card.type}.jpg` } });\n            }\n            normalCards.push({\n                key: `card-${card.id}`,\n                className: 'shadow',\n                card,\n                faceUp: true,\n                opacity: middleCardsFound ? 0 : 1,\n                left: startX + (scaledWidth * MIDDLE_CARD_RATIO + DELTA) * i,\n                top: (height - scaledHeight * MIDDLE_CARD_RATIO) / 2,\n                scale: MIDDLE_CARD_RATIO,\n                onClick: middleCardsFound ? undefined : onClick,\n            });\n        });\n        return normalCards;\n    }\n\n    getDiscardCards(middleCardsFound) {\n        const { G, moves, width, height, scaledWidth, scaledHeight } = this.props;\n        const { mode } = this.state;\n        const { discard, isFlipped } = G;\n        const MAX_DISCARDS_SHOWN = 4;\n        const numCardsShown = Math.min(discard.length, MAX_DISCARDS_SHOWN);\n        const startX = (width - numCardsShown * scaledWidth * MIDDLE_CARD_RATIO - (numCardsShown - 1) * DELTA) / 2;\n        const normalCards = [];\n        for (let i = 0; i < discard.length && i <= MAX_DISCARDS_SHOWN; i++) {\n            const card = discard[discard.length - 1 - i];\n            let onClick = undefined;\n            if (mode === SetModePanel.DEFAULT_MODE && i < MAX_DISCARDS_SHOWN) {\n                onClick = () => moves.pickUp(discard.length - 1 - i);\n            } else if (mode === SetModePanel.FLIP_MODE) {\n                onClick = () => {\n                    moves.flipObject(card.id);\n                    this.setState({ mode: SetModePanel.DEFAULT_MODE });\n                };\n            } else if (mode === SetModePanel.HELP_MODE) {\n                onClick = () => this.setState({ helpCard: { key: card.type, src: `./cards/${card.type}.jpg` } });\n            }\n            normalCards.push({\n                key: `card-${card.id}`,\n                className: 'shadow',\n                card,\n                faceUp: !isFlipped[card.id],\n                opacity: i === MAX_DISCARDS_SHOWN || middleCardsFound ? 0 : 1,\n                left: startX + (scaledWidth * MIDDLE_CARD_RATIO + DELTA) * i,\n                top: (height - scaledHeight * MIDDLE_CARD_RATIO) / 2,\n                scale: MIDDLE_CARD_RATIO,\n                onClick: middleCardsFound ? undefined : onClick,\n            });\n        }\n        return normalCards;\n    }\n\n    renderSetModePanel() {\n        const { G, ctx, moves, playerID } = this.props;\n        const { mode } = this.state;\n        return <SetModePanel\n            key='set-mode-panel'\n            G={G}\n            ctx={ctx}\n            moves={moves}\n            playerID={playerID}\n            mode={mode}\n            setMode={mode => this.setState({ mode, selectedIndex: undefined, helpCard: undefined })}\n            setSelectedIndex={selectedIndex => this.setState({ selectedIndex })}\n            selectFunction={this.selectFunction}\n        />;\n    }\n\n    renderMyArea() {\n        const { scaledHeight } = this.props;\n        return <div\n            key='my-area'\n            className='my-area'\n            style={{\n                height: scaledHeight + 2 * DELTA,\n            }}\n        />;\n    }\n\n    renderActionButton() {\n        const { G, ctx, moves, playerID, width, height, scaledHeight, playAgain } = this.props;\n        const { mode, selectedIndex } = this.state;\n        const { isAlive, privateZone } = G;\n        const { currentPlayer, gameover, phase, activePlayers } = ctx;\n        const ACTION_BUTTON_WIDTH = 160;\n        const ACTION_BUTTON_HEIGHT = 30;\n        let actionButton = undefined;\n        if (gameover && playAgain) {\n            actionButton = {\n                text: 'Play again',\n                type: 'selectable warn',\n                onClick: playAgain,\n            };\n        } else if (this.stage() === 'selectCharacter' && selectedIndex !== undefined) {\n            actionButton = {\n                text: 'Select',\n                type: 'selectable warn',\n                onClick: () => {\n                    moves.selectCharacter(selectedIndex);\n                    this.setState({ selectedIndex: undefined });\n                },\n            };\n        } else if (phase === 'selectCharacters' && this.stage() === undefined) {\n            actionButton = {\n                text: activePlayers[currentPlayer] === 'selectCharacter' ? 'Waiting for king...' : 'Waiting for others...',\n                type: 'disabled',\n            };\n        } else if (!isAlive[playerID]) {\n            return undefined;\n        } else if ((mode === SetModePanel.GIVE_MODE && selectedIndex !== undefined)\n            || (mode === SetModePanel.REVEAL_MODE && selectedIndex !== undefined)\n            || mode === SetModePanel.GIVE_JUDGMENT_MODE\n            || (mode === SetModePanel.COUNTRY_SCENE_MODE && selectedIndex !== undefined)\n            || (mode === SetModePanel.BLOCKADE_MODE && selectedIndex !== undefined)\n            || (mode === SetModePanel.ALLIANCE_MODE && selectedIndex === undefined)) {\n            actionButton = {\n                text: 'Select player',\n                type: 'disabled',\n            };\n        } else if (mode === SetModePanel.ALLIANCE_MODE && selectedIndex !== undefined) {\n            actionButton = {\n                text: 'Select player 2',\n                type: 'disabled',\n            };\n        } else if (this.stage() === 'play' && currentPlayer === playerID && privateZone.length === 0) {\n            actionButton = {\n                text: 'End play',\n                type: 'selectable warn',\n                onClick: () => moves.endPlay(),\n            }\n        } else if (this.stage() === 'discard') {\n            actionButton = {\n                text: 'Discard cards',\n                type: 'disabled',\n            };\n        }\n        if (actionButton !== undefined) {\n            const { text, type, onClick } = actionButton;\n            return <button\n                className={`positioned ${type}`}\n                style={{\n                    left: (width - ACTION_BUTTON_WIDTH) / 2,\n                    top: height - scaledHeight - ACTION_BUTTON_HEIGHT - 3 * DELTA,\n                    width: ACTION_BUTTON_WIDTH,\n                    height: ACTION_BUTTON_HEIGHT,\n                }}\n                onClick={onClick}\n                disabled={onClick === undefined}\n            >\n                {text}\n            </button>;\n        }\n    }\n\n    renderHelp() {\n        const { mode, helpCard } = this.state;\n        if (mode === SetModePanel.HELP_MODE && helpCard !== undefined) {\n            return <div\n                className='help-panel'\n            >\n                <img src={helpCard.src} alt='card' />\n                <div dangerouslySetInnerHTML={{ __html: RULES[helpCard.key] }} />\n                <button\n                    className='selectable bad'\n                    onClick={() => this.setState({ mode: SetModePanel.DEFAULT_MODE, helpCard: undefined })}\n                >\n                    {'X'}\n                </button>\n            </div>;\n        }\n    }\n\n    selectFunction = index => {\n        const { G, moves, playerID } = this.props;\n        const { mode, selectedIndex } = this.state;\n        const { hands, harvest } = G;\n        const card = hands[playerID][index];\n        if (mode === SetModePanel.DEFAULT_MODE && this.stage() === 'play') {\n            if (harvest.length > 0) {\n                return () => moves.putDownHarvest(index);\n            } else if (['Capture', 'Starvation'].includes(EQUIPMENT[card.type])) {\n                return () => this.setState({ mode: SetModePanel.GIVE_JUDGMENT_MODE, selectedIndex: index });\n            } else {\n                return () => moves.play(index);\n            }\n        } else if (mode === SetModePanel.DEFAULT_MODE && this.stage() === 'discard') {\n            return () => moves.discardCard(index);\n        } else if (mode === SetModePanel.GIVE_MODE && selectedIndex === undefined) {\n            return () => this.setState({ selectedIndex: index });\n        } else if (mode === SetModePanel.DISMANTLE_MODE) {\n            return () => {\n                moves.dismantle({\n                    playerID,\n                    index: index,\n                });\n                this.setState({ mode: SetModePanel.DEFAULT_MODE });\n            };\n        } else if (mode === SetModePanel.REVEAL_MODE && selectedIndex === undefined) {\n            return () => this.setState({ selectedIndex: index });\n        } else if (mode === SetModePanel.FLIP_MODE) {\n            return () => {\n                moves.flipObject(card.id);\n                this.setState({ mode: SetModePanel.DEFAULT_MODE });\n            };\n        } else if (mode === SetModePanel.HELP_MODE) {\n            return () => this.setState({ helpCard: { key: card.type, src: `./cards/${card.type}.jpg` } });\n        } else if (mode === SetModePanel.COUNTRY_SCENE_MODE && selectedIndex === undefined) {\n            if (card.suit === 'DIAMOND') {\n                return () => this.setState({ mode: SetModePanel.COUNTRY_SCENE_MODE, selectedIndex: index });\n            }\n        } else if (mode === SetModePanel.BLOCKADE_MODE && selectedIndex === undefined) {\n            if (['CLUB', 'SPADE'].includes(card.suit) && (BASIC.includes(card.type) || EQUIPMENT[card.type])) {\n                return () => this.setState({ mode: SetModePanel.COUNTRY_SCENE_MODE, selectedIndex: index });\n            }\n        }\n    }\n\n    stage() {\n        const { ctx, playerID } = this.props;\n        const { activePlayers } = ctx;\n        return activePlayers && activePlayers[playerID];\n    }\n}\n","import React from 'react';\nimport GameArea from './gameArea.js';\nimport './board.css';\n\nconst CARD_WIDTH = 210;\nconst CARD_HEIGHT = 300;\nconst DELTA = 10;\n\nexport class SanGuoShaBoard extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    componentDidMount() {\n        this.updateDimensions();\n        window.addEventListener('resize', this.updateDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateDimensions);\n    }\n\n    render() {\n        const { ctx } = this.props;\n        const { clientRect } = this.state;\n        let gameArea = undefined;\n        if (clientRect) {\n            const { playerAreas, scale } = this.findPlayerAreas(ctx.numPlayers, clientRect);\n            gameArea = <GameArea\n                width={clientRect.width}\n                height={clientRect.height}\n                playerAreas={playerAreas}\n                scaledWidth={CARD_WIDTH * scale}\n                scaledHeight={CARD_HEIGHT * scale}\n                {...this.props}\n            />;\n        }\n        return <div className='board' ref={el => this.el = el}>\n            {gameArea}\n        </div>;\n    }\n\n    updateDimensions = () => {\n        if (this.el) {\n            this.setState({\n                clientRect: {\n                    width: this.el.clientWidth,\n                    height: this.el.clientHeight,\n                }\n            });\n        }\n    }\n\n    /**\n     * Find the player areas (given by their top left coordinates, and their scale) that look the\n     * most uniform around the screen.\n     */\n    findPlayerAreas(numPlayers, { width, height }) {\n        // find maximum scale of player areas so that they still fit\n        let maxScale = 0.1;\n        let bestLayout = undefined;\n        for (var numSide = 0; numSide <= (numPlayers - 1) / 3; numSide++) {\n            const numTop = numPlayers - 1 - 2 * numSide;\n\n            let scale = 1;\n            scale = Math.min(scale, (width - 4 * DELTA) / 6 / CARD_WIDTH);\n            scale = Math.min(scale, (height - 4 * DELTA) / 3.5 / CARD_HEIGHT);\n            scale = Math.min(scale, (width - (numTop + 3) * DELTA) / (numTop + 1) / CARD_WIDTH);\n            scale = Math.min(scale, (height - (numSide + 2) * DELTA) / (numSide + 1) / CARD_HEIGHT);\n            if (scale >= maxScale) {\n                maxScale = scale;\n                bestLayout = { numTop, numSide };\n            }\n        }\n        return this.findPlayerAreasGivenLayout(maxScale, bestLayout, { width, height });\n    }\n\n    findPlayerAreasGivenLayout(scale, { numTop, numSide }, { width, height }) {\n        const scaledWidth = CARD_WIDTH * scale;\n        const scaledHeight = CARD_HEIGHT * scale;\n        const sideSpacing = (height - (numSide + 1) * scaledHeight) / (numSide + 1);\n        const topSpacing = (width - 2 * DELTA - (numTop + 2) * scaledWidth) / (numTop + 1);\n\n        const playerAreas = [];\n        playerAreas.push({\n            x: width - DELTA - scaledWidth,\n            y: height - DELTA - scaledHeight,\n        });\n        for (let i = 0; i < numSide; i++) {\n            playerAreas.push({\n                x: width - scaledWidth - DELTA,\n                y: sideSpacing + (scaledHeight + sideSpacing) * (numSide - i - 1),\n            });\n        }\n        for (let i = 0; i < numTop; i++) {\n            playerAreas.push({\n                x: width - DELTA - scaledWidth - (scaledWidth + topSpacing) * (i + 1),\n                y: DELTA,\n            });\n        }\n        for (let i = 0; i < numSide; i++) {\n            playerAreas.push({\n                x: DELTA,\n                y: sideSpacing + (scaledHeight + sideSpacing) * i,\n            });\n        }\n        return { playerAreas, scale };\n    }\n}\n","import React from 'react';\nimport { Client } from 'boardgame.io/react';\nimport { SanGuoSha } from '../lib/game';\nimport { SanGuoShaBoard } from './board';\nimport logger from 'redux-logger';\nimport { applyMiddleware } from 'redux';\n\nconst SanGuoShaClient = Client({\n    game: SanGuoSha,\n    board: SanGuoShaBoard,\n    numPlayers: 3,\n    enhancer: applyMiddleware(logger),\n});\n\nexport default class Room extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <SanGuoShaClient playerID={\"0\"} />\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { LobbyClient } from 'boardgame.io/client';\nimport { SocketIO } from 'boardgame.io/multiplayer';\nimport { Client } from 'boardgame.io/react';\nimport { SanGuoSha } from '../lib/game';\nimport { SanGuoShaBoard } from './board';\nimport './lobby.css';\n\nconst SERVER = process.env.REACT_APP_PROXY || document.location.toString().replace(/\\/$/, '');\nconst NAME_KEY = 'name';\nconst MATCH_INFO_KEY = 'matchInfo';\nconst INPUT_NAME_ID = 'name-input';\nconst EXPANSIONS = ['wind', 'fire', 'wood'];\n\nconst SanGuoShaClient = Client({\n    game: SanGuoSha,\n    board: SanGuoShaBoard,\n    multiplayer: SocketIO({ server: SERVER }),\n    debug: false,\n});\n\nexport default class SanGuoShaLobby extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.lobbyClient = new LobbyClient({ server: SERVER });\n        const matchInfo = window.localStorage.getItem(MATCH_INFO_KEY);\n        this.state = {\n            name: window.localStorage.getItem(NAME_KEY),\n            matchInfo: matchInfo ? JSON.parse(matchInfo) : undefined, // { matchID, playerID, credentials }\n            matches: [],\n            inGame: false,\n        };\n    }\n\n    componentDidMount() {\n        // Mobile requires explicit user action to play audio\n        document.querySelector('#lobby-view').addEventListener('click', this.props.playAudio);\n        this.refreshLobbyState();\n    }\n\n    componentWillUnmount() {\n        document.querySelector('#lobby-view').removeEventListener('click', this.props.playAudio);\n    }\n\n    refreshLobbyState = async () => {\n        const { matchInfo } = this.state;\n        const { matches } = await this.lobbyClient.listMatches(SanGuoSha.name);\n\n        if (matchInfo !== undefined) {\n            const { matchID, playerID } = matchInfo;\n\n            const match = matches.find(match => match.matchID === matchID);\n            if (match === undefined) {\n                this.setState({ matchInfo: undefined });\n                await this.leaveMatch();\n                this.refreshLobbyState();\n                return;\n            }\n\n            if (match.setupData.parentMatchID !== undefined) {\n                this.setState({ inGame: true });\n                return;\n            }\n\n            const childMatch = matches.find(match => match.setupData.parentMatchID === matchID);\n            if (childMatch !== undefined) {\n                await this.leaveMatch();\n                await this.joinMatch(childMatch.matchID, playerID);\n                this.refreshLobbyState();\n                return;\n            }\n        }\n\n        this.setState({ matches });\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(this.refreshLobbyState, 1000);\n        return;\n    }\n\n    render() {\n        const { matchInfo, inGame } = this.state;\n        if (inGame) {\n            const { matchID, playerID, credentials } = matchInfo;\n            return <div>\n                <SanGuoShaClient\n                    matchID={matchID}\n                    playerID={playerID}\n                    credentials={credentials}\n                    playAgain={playerID === '-1' ? undefined : () => {\n                        this.setState({ inGame: false });\n                        this.playAgain().then(this.refreshLobbyState);\n                    }}\n                />\n                <button\n                    className=\"leave-button\"\n                    onClick={() => {\n                        this.setState({ inGame: false });\n                        this.leaveMatch().then(this.refreshLobbyState);\n                    }}\n                >\n                    {'Leave'}\n                </button>\n            </div>;\n        }\n        return <div className='lobby'>\n            <div className='title'>\n                <img src='./name.png' alt='sanguosha' />\n            </div>\n            <div id=\"lobby-view\">{this.renderLobby()}</div>\n        </div>;\n    }\n\n    renderLobby() {\n        const { name, matches } = this.state;\n        if (name === null || name === undefined) {\n            return <div>\n                <p>{'Choose a player name:'}</p>\n                <input\n                    id={INPUT_NAME_ID}\n                    type=\"text\"\n                    defaultValue=\"Visitor\"\n                    onKeyPress={e => {\n                        if (e.nativeEvent.key === 'Enter') {\n                            this.setName();\n                        }\n                    }}\n                />\n                <button onClick={this.setName}>{'Enter'}</button>\n            </div>;\n        } else {\n            return <div>\n                <p>{`Welcome, ${name}`}</p>\n                {this.maybeRenderCreateButton()}\n                <div id=\"instances\">\n                    <table>\n                        <tbody>\n                            <tr>\n                                <th>{'Creation time'}</th>\n                                <th>{'Players'}</th>\n                                <th>{'Status'}</th>\n                                <th></th>\n                            </tr>\n                            {matches.map(this.renderMatch)}\n                        </tbody>\n                    </table>\n                </div>\n            </div>;\n        };\n    }\n\n    maybeRenderCreateButton() {\n        const { matchInfo } = this.state;\n        if (matchInfo !== undefined) {\n            return;\n        }\n        return <button\n            onClick={() => this.createMatch(SanGuoSha.maxPlayers, undefined)\n                .then(matchID => this.joinMatch(matchID, '0'))\n                .then(this.refreshLobbyState)}\n        >\n            {'Create new room'}\n        </button>;\n    }\n\n    renderMatch = match => {\n        const { name, matchInfo } = this.state;\n        const { createdAt, gameover, matchID, players, setupData } = match;\n        const playerNames = players.map(player => player.name).filter(name => name !== undefined);\n        let status;\n        if (gameover) {\n            status = 'Completed';\n        } else if (setupData.parentMatchID !== undefined) {\n            status = 'In progress';\n        } else if (playerNames.length < SanGuoSha.minPlayers) {\n            status = 'Waiting for more players';\n        } else if (playerNames[0] === name) {\n            status = ['Expansions:', ...EXPANSIONS.map(expansion => <span key={expansion} className='expansion'>\n                <input\n                    type='checkbox'\n                    checked=\"true\"\n                    value={this.state[`expansion-${expansion}`]}\n                    onChange={e => this.setState({ [`expansion-${expansion}`]: e.target.checked })}\n                />\n                {expansion}\n            </span>)];\n        } else {\n            status = 'Waiting for host to start';\n        }\n        const buttons = [];\n        if (matchInfo === undefined || matchInfo.matchID !== matchID) {\n            if (!gameover && players.some(player => player.name === undefined)) {\n                buttons.push(\n                    <button\n                        key=\"join\"\n                        onClick={() => this.leaveMatch()\n                            .then(() => this.joinMatch(matchID, players.find(player => player.name === undefined).id.toString()))\n                            .then(this.refreshLobbyState)}\n                    >\n                        {'Join'}\n                    </button>\n                );\n            } else {\n                buttons.push(\n                    <button\n                        key=\"watch\"\n                        onClick={() => this.leaveMatch()\n                            .then(() => this.setState({ matchInfo: { matchID: matchID, playerID: '-1', }, inGame: true }))}\n                    >\n                        {'Watch'}\n                    </button>\n                );\n            }\n        } else {\n            if (playerNames[0] === name && playerNames.length >= SanGuoSha.minPlayers) {\n                buttons.push(\n                    <button\n                        key=\"start\"\n                        onClick={() => this.createMatch(playerNames.length, matchID).then(this.refreshLobbyState)}\n                    >\n                        {'Start'}\n                    </button>\n                );\n            }\n            buttons.push(\n                <button key=\"leave\"\n                    onClick={() => this.leaveMatch().then(this.refreshLobbyState)}\n                >\n                    {'Leave'}\n                </button>\n            );\n        }\n        return <tr key={matchID}>\n            <td>{new Date(createdAt).toLocaleString()}</td>\n            <td>{playerNames.join(', ')}</td>\n            <td>{status}</td>\n            <td>{buttons}</td>\n        </tr>;\n    }\n\n    setName = () => {\n        const name = document.getElementById(INPUT_NAME_ID).value;\n        this.setState({ name });\n        window.localStorage.setItem(NAME_KEY, name);\n    }\n\n    createMatch = async (numPlayers, parentMatchID) => {\n        const { matchID } = await this.lobbyClient.createMatch(\n            SanGuoSha.name,\n            {\n                numPlayers,\n                setupData: {\n                    parentMatchID,\n                    expansions: EXPANSIONS.filter(expansion => this.state[`expansion-${expansion}`]),\n                },\n            },\n        );\n        return matchID;\n    }\n\n    joinMatch = async (matchID, playerID) => {\n        const { name } = this.state;\n        const { playerCredentials } = await this.lobbyClient.joinMatch(\n            SanGuoSha.name,\n            matchID,\n            {\n                playerID,\n                playerName: name,\n            },\n        );\n        const matchInfo = {\n            matchID,\n            playerID,\n            credentials: playerCredentials,\n        };\n        this.setState({ matchInfo });\n        window.localStorage.setItem(MATCH_INFO_KEY, JSON.stringify(matchInfo));\n    }\n\n    leaveMatch = async () => {\n        const { matchInfo } = this.state;\n        this.setState({ matchInfo: undefined, inGame: false });\n        window.localStorage.removeItem(MATCH_INFO_KEY);\n        if (matchInfo === undefined || matchInfo.credentials === undefined) {\n            return;\n        }\n        const { matchID, playerID, credentials } = matchInfo;\n        await this.lobbyClient.leaveMatch(\n            SanGuoSha.name,\n            matchID,\n            {\n                playerID,\n                credentials,\n            },\n        );\n    }\n\n    playAgain = async () => {\n        const { matchInfo: { matchID, playerID, credentials } } = this.state;\n        const { nextMatchID } = await this.lobbyClient.playAgain(SanGuoSha.name, matchID, {\n            playerID,\n            credentials,\n            numPlayers: SanGuoSha.maxPlayers,\n            setupData: {},\n        });\n        await this.leaveMatch();\n        this.joinMatch(nextMatchID, playerID);\n    }\n}\n","import * as classNames from 'classnames';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport Room from './client/room';\nimport Lobby from './client/lobby';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.audio = new Audio();\n        this.audio.src = './background.mp3';\n        this.audio.volume = 0.1;\n        this.audio.loop = true;\n        this.audio.play();\n        this.state = { volume: 0.1 };\n    }\n\n    render() {\n        return <div>\n            {process.env.REACT_APP_LOCAL ? <Room /> : <Lobby playAudio={() => this.audio.play()} />}\n            <button\n                className={classNames('toggle-sound', this.state.volume === 0 ? 'off' : 'on')}\n                onClick={() => {\n                    this.audio.volume = 0.1 - this.audio.volume;\n                    this.setState({ volume: this.audio.volume });\n                }}\n            />\n        </div>;\n    }\n}\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}